<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Titulo_persona extends MY_Controller {

	function __construct() {
		parent::__construct();
		$this->load->model('titulos/titulo_persona_model');
		$this->load->model('persona_model');
		$this->roles_permitidos = array(ROL_ADMIN, ROL_USI, ROL_TITULO);
		$this->nav_route = 'titulo/titulo_persona';
	}

	public function listar() {
		if (!in_array($this->rol->codigo, $this->roles_permitidos)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$tableData = array(
			'columns' => array(
				array('label' => 'Documento', 'data' => 'documento', 'width' => 10),
				array('label' => 'Nombre', 'data' => 'persona', 'width' => 20),
				array('label' => 'Sexo', 'data' => 'sexo', 'width' => 10),
				array('label' => 'Nacionalidad', 'data' => 'nacionalidad', 'width' => 15),
				array('label' => 'Teléfono', 'data' => 'telefono_fijo', 'width' => 8),
				array('label' => 'Celular', 'data' => 'telefono_movil', 'width' => 10),
				array('label' => 'Email', 'data' => 'email', 'width' => 20),
				array('label' => '', 'data' => 'menu', 'width' => 12, 'class' => 'dt-body-center', 'responsive_class' => 'all', 'sortable' => 'false', 'searchable' => 'false')
			),
			'table_id' => 'persona_table',
			'source_url' => 'titulos/titulo_persona/listar_data',
			'reuse_var' => TRUE,
			'initComplete' => "complete_persona_table",
			'pagingType' => 'full',
			'footer' => TRUE,
			'dom' => '<"row"<"col-sm-4"l><"col-sm-8"p>>rt<"row"<"col-sm-4"i><"col-sm-8"p>>'
		);
		$data['html_table'] = buildHTML($tableData);
		$data['js_table'] = buildJS($tableData);
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['title'] = TITLE . 'Titulos - Personas';
		$this->load_template('titulos/persona/persona_listar', $data);
	}

	public function listar_data() {
		if (!in_array($this->rol->codigo, $this->roles_permitidos)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$this->datatables
			->fast_mode()
			->select("persona.id,CONCAT(documento_tipo.descripcion_corta, ' ', persona.documento) as documento, CONCAT(persona.apellido, ', ', persona.nombre) as persona,sexo.descripcion as sexo,nacionalidad.descripcion as nacionalidad, persona.telefono_fijo, persona.telefono_movil,persona.email")
			->exact_search('persona.cuil')
			->unset_column('id')
			->from('persona')
			->join('documento_tipo', 'documento_tipo.id = persona.documento_tipo_id', 'left')
			->join('sexo', 'sexo.id = persona.sexo_id', 'left')
			->join('nacionalidad', 'nacionalidad.id = persona.nacionalidad_id', 'left');
		if ($this->edicion) {
			$this->datatables->add_column('menu', '<div class="btn-group" role="group">'
				. '<a class="btn btn-xs btn-default" href="titulos/titulo_persona/ver/$1" title="Ver"><i class="fa fa-search"></i> Ver</a>'
				. '<button type="button" class="btn btn-xs btn-default dropdown-toggle" data-toggle="dropdown"><span class="caret"></span></button>'
				. '<ul class="dropdown-menu dropdown-menu-right">'
				. '<li><a class="dropdown-item" href="titulos/titulo_persona/editar/$1" title="Editar"><i class="fa fa-pencil"></i> Editar</a></li>'
				. '</ul></div>', 'id');
		} else {
			$this->datatables->add_column('menu', '<a class="btn btn-xs btn-default" href="titulos/titulo_persona/ver/$1" title="Ver"><i class="fa fa-search"></i> Ver</a>', 'id');
		}

		echo $this->datatables->generate();
	}

	public function agregar($cuil = '') {
		if (!in_array($this->rol->codigo, $this->roles_permitidos)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}

		if (!$this->edicion) {
			$this->session->set_flashdata('error', 'No tiene permisos para la acción solicitada');
			redirect("titulos/titulo_persona/listar");
		}

		if (!empty($cuil) && strlen($cuil) === 13) {
			$persona_documento = $this->persona_model->get(array('documento_tipo_id' => '1', 'documento' => substr($cuil, 3, 8)));
			if (!empty($persona_documento)) {
				redirect("titulos/titulo_persona/editar/" . $persona_documento[0]->id . '/' . $cuil);
			}
		}
		$this->load->model('departamento_model');
		$this->load->model('documento_tipo_model');
		$this->load->model('estado_civil_model');
		$this->load->model('grupo_sanguineo_model');
		$this->load->model('localidad_model');
		$this->load->model('nacionalidad_model');
		$this->load->model('nivel_estudio_model');
		$this->load->model('obra_social_model');
		$this->load->model('ocupacion_model');
		$this->load->model('prestadora_model');
		$this->load->model('sexo_model');
		$this->array_depto_nacimiento_control = $array_depto_nacimiento = $this->get_array('departamento', 'descripcion', 'id', null, array('' => '-- Seleccionar departamento --'));
		$this->array_documento_tipo_control = $array_documento_tipo = $this->get_array('documento_tipo', 'descripcion_corta', 'id', null, array('' => '-- Seleccionar --'));
		$this->array_estado_civil_control = $array_estado_civil = $this->get_array('estado_civil', 'descripcion', 'id', null, array('' => '-- Seleccionar estado civil --'));
		$this->array_grupo_sanguineo_control = $array_grupo_sanguineo = $this->get_array('grupo_sanguineo', 'descripcion', 'id', null, array('' => '-- Seleccionar grupo sanguíneo --'));
		$this->array_localidad_control = $array_localidad = $this->get_array('localidad', 'localidad', 'id', array(
			'select' => array('localidad.id', "CONCAT(departamento.descripcion, ' - ', localidad.descripcion) as localidad"),
			'join' => array(array('departamento', 'departamento.id = localidad.departamento_id')),
			'sort_by' => 'departamento.descripcion, localidad.descripcion'
			), array('' => '-- Seleccionar localidad --'));
		$this->array_nacionalidad_control = $array_nacionalidad = $this->get_array('nacionalidad', 'descripcion', 'id', null, array('' => '-- Seleccionar nacionalidad --'));
		$this->array_nivel_estudio_control = $array_nivel_estudio = $this->get_array('nivel_estudio', 'descripcion', 'id', null, array('' => '-- Seleccionar nivel de estudios --'));
		$this->array_obra_social_control = $array_obra_social = $this->get_array('obra_social', 'descripcion', 'id', null, array('' => '-- Seleccionar obra social --'));
		$this->array_ocupacion_control = $array_ocupacion = $this->get_array('ocupacion', 'descripcion', 'id', null, array('' => '-- Seleccionar ocupación --'));
		$this->array_prestadora_control = $array_prestadora = $this->get_array('prestadora', 'descripcion', 'id', null, array('' => '-- Seleccionar prestadora --'));
		$this->array_sexo_control = $array_sexo = $this->get_array('sexo', 'descripcion', 'id', null, array('' => '-- Seleccionar sexo'));
		if (!empty($cuil)) {
			$this->persona_model->fields['cuil']['value'] = $cuil;
		}
		$this->set_model_validation_rules($this->persona_model);
		if ($this->form_validation->run() === TRUE) {
			$this->db->trans_begin();
			$trans_ok = TRUE;
			$trans_ok &= $this->persona_model->create(array(
				'cuil' => $this->input->post('cuil'),
				'documento_tipo_id' => $this->input->post('documento_tipo'),
				'documento' => $this->input->post('documento'),
				'apellido' => $this->input->post('apellido'),
				'nombre' => $this->input->post('nombre'),
				'calle' => $this->input->post('calle'),
				'calle_numero' => $this->input->post('calle_numero'),
				'departamento' => $this->input->post('departamento'),
				'piso' => $this->input->post('piso'),
				'barrio' => $this->input->post('barrio'),
				'manzana' => $this->input->post('manzana'),
				'casa' => $this->input->post('casa'),
				'localidad_id' => $this->input->post('localidad'),
				'sexo_id' => $this->input->post('sexo'),
				'estado_civil_id' => $this->input->post('estado_civil'),
				'nivel_estudio_id' => $this->input->post('nivel_estudio'),
				'ocupacion_id' => $this->input->post('ocupacion'),
				'telefono_fijo' => $this->input->post('telefono_fijo'),
				'telefono_movil' => $this->input->post('telefono_movil'),
				'prestadora_id' => $this->input->post('prestadora'),
				'fecha_nacimiento' => $this->get_date_sql('fecha_nacimiento'),
				'fecha_defuncion' => $this->get_date_sql('fecha_defuncion'),
				'obra_social_id' => $this->input->post('obra_social'),
				'grupo_sanguineo_id' => $this->input->post('grupo_sanguineo'),
				'depto_nacimiento_id' => $this->input->post('depto_nacimiento'),
				'lugar_traslado_emergencia' => $this->input->post('lugar_traslado_emergencia'),
				'nacionalidad_id' => $this->input->post('nacionalidad'),
				'email' => $this->input->post('email')), FALSE);
				$persona_id = $this->persona_model->get_row_id();
			if ($trans_ok) {
				$this->db->trans_commit();
				$this->session->set_flashdata('message', $this->persona_model->get_msg());
				if (!empty($cuil)) {
					redirect('usuario/permisos', 'refresh');
				} else {
					
					redirect("titulos/titulo_persona/ver/$persona_id", 'refresh');
				}
			}
		}
		$data['error'] = (validation_errors() ? validation_errors() : ($this->persona_model->get_error() ? $this->persona_model->get_error() : $this->session->flashdata('error')));

		$this->persona_model->fields['depto_nacimiento']['array'] = $array_depto_nacimiento;
		$this->persona_model->fields['documento_tipo']['array'] = $array_documento_tipo;
		$this->persona_model->fields['estado_civil']['array'] = $array_estado_civil;
		$this->persona_model->fields['grupo_sanguineo']['array'] = $array_grupo_sanguineo;
		$this->persona_model->fields['localidad']['array'] = $array_localidad;
		$this->persona_model->fields['nacionalidad']['array'] = $array_nacionalidad;
		$this->persona_model->fields['nivel_estudio']['array'] = $array_nivel_estudio;
		$this->persona_model->fields['obra_social']['array'] = $array_obra_social;
		$this->persona_model->fields['ocupacion']['array'] = $array_ocupacion;
		$this->persona_model->fields['prestadora']['array'] = $array_prestadora;
		$this->persona_model->fields['sexo']['array'] = $array_sexo;

		$data['fields'] = $this->build_fields($this->persona_model->fields);
		$data['txt_btn'] = 'Agregar';
		$data['class'] = array('agregar' => 'active btn-app-zetta-active', 'ver' => 'disabled', 'editar' => 'disabled', 'eliminar' => 'disabled', 'titulo' => '');
		$data['title'] = TITLE . ' - Agregar persona';
		$this->load_template('titulos/persona/persona_agregar', $data);
	}

	public function editar($id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $id == NULL || !ctype_digit($id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		if (!$this->edicion) {
			$this->session->set_flashdata('error', 'No tiene permisos para la acción solicitada');
			redirect("titulos/titulo_persona/ver/$id");
		}

		$persona = $this->persona_model->get(array('id' => $id, 'join' => array(
				array('documento_tipo', 'persona.documento_tipo_id=documento_tipo.id', 'left', array('documento_tipo.descripcion_corta as documento_tipo'))
		)));
		if (empty($persona)) {
			show_error('No se encontró el registro a editar', 500, 'Registro no encontrado');
		}

		$this->load->model('departamento_model');
		$this->load->model('documento_tipo_model');
		$this->load->model('estado_civil_model');
		$this->load->model('grupo_sanguineo_model');
		$this->load->model('localidad_model');
		$this->load->model('nacionalidad_model');
		$this->load->model('nivel_estudio_model');
		$this->load->model('obra_social_model');
		$this->load->model('ocupacion_model');
		$this->load->model('prestadora_model');
		$this->load->model('sexo_model');
		$this->load->model('familia_model');
		$this->load->model('alumno_model');
		$this->load->model('servicio_model');
		$this->load->model('tbcabh_model');
		$this->array_depto_nacimiento_control = $array_depto_nacimiento = $this->get_array('departamento', 'descripcion', 'id', null, array('' => '-- Seleccionar departamento --'));
		$this->array_documento_tipo_control = $array_documento_tipo = $this->get_array('documento_tipo', 'descripcion_corta', 'id', array('id !=' => 8), array('' => '-- Seleccionar --'));
		$this->array_estado_civil_control = $array_estado_civil = $this->get_array('estado_civil', 'descripcion', 'id', null, array('' => '-- Seleccionar estado civil --'));
		$this->array_grupo_sanguineo_control = $array_grupo_sanguineo = $this->get_array('grupo_sanguineo', 'descripcion', 'id', null, array('' => '-- Seleccionar grupo sanguíneo --'));
		$this->array_localidad_control = $array_localidad = $this->get_array('localidad', 'localidad', 'id', array(
			'select' => array('localidad.id', "CONCAT(departamento.descripcion, ' - ', localidad.descripcion) as localidad"),
			'join' => array(array('departamento', 'departamento.id = localidad.departamento_id')),
			'sort_by' => 'departamento.descripcion, localidad.descripcion'
			), array('' => '-- Seleccionar localidad --'));
		$this->array_nacionalidad_control = $array_nacionalidad = $this->get_array('nacionalidad', 'descripcion', 'id', null, array('' => '-- Seleccionar nacionalidad --'));
		$this->array_nivel_estudio_control = $array_nivel_estudio = $this->get_array('nivel_estudio', 'descripcion', 'id', null, array('' => '-- Seleccionar nivel de estudios --'));
		$this->array_obra_social_control = $array_obra_social = $this->get_array('obra_social', 'descripcion', 'id', null, array('' => '-- Seleccionar obra social --'));
		$this->array_ocupacion_control = $array_ocupacion = $this->get_array('ocupacion', 'descripcion', 'id', null, array('' => '-- Seleccionar ocupación --'));
		$this->array_prestadora_control = $array_prestadora = $this->get_array('prestadora', 'descripcion', 'id', null, array('' => '-- Seleccionar prestadora --'));
		$this->array_sexo_control = $array_sexo = $this->get_array('sexo', 'descripcion', 'id', null, array('' => '-- Seleccionar sexo --'));

		$this->set_model_validation_rules($this->persona_model);
		if (isset($_POST) && !empty($_POST)) {
			if ($id !== $this->input->post('id')) {
				show_error('Esta solicitud no pasó el control de seguridad.');
			}
			if ($this->form_validation->run() === TRUE) {
				$trans_ok = TRUE;
				$trans_ok &= $this->persona_model->update(array(
					'id' => $this->input->post('id'),
					'documento' => $this->input->post('documento'),
					'apellido' => $this->input->post('apellido'),
					'nombre' => $this->input->post('nombre'),
					'sexo_id' => $this->input->post('sexo'),
					'telefono_fijo' => $this->input->post('telefono_fijo'),
					'telefono_movil' => $this->input->post('telefono_movil'),
					'fecha_nacimiento' => $this->get_date_sql('fecha_nacimiento'),			
					'nacionalidad_id' => $this->input->post('nacionalidad'),
					'email' => $this->input->post('email')));
				if ($trans_ok) {
					$this->session->set_flashdata('message', $this->persona_model->get_msg());
					redirect("titulos/titulo_persona/ver/$persona->id", 'refresh');
				}
			}
		}
		$data['error'] = (validation_errors() ? validation_errors() : ($this->persona_model->get_error() ? $this->persona_model->get_error() : $this->session->flashdata('error')));

		$this->persona_model->fields['depto_nacimiento']['array'] = $array_depto_nacimiento;
		$this->persona_model->fields['documento_tipo']['array'] = $array_documento_tipo;
		$this->persona_model->fields['estado_civil']['array'] = $array_estado_civil;
		$this->persona_model->fields['grupo_sanguineo']['array'] = $array_grupo_sanguineo;
		$this->persona_model->fields['localidad']['array'] = $array_localidad;
		$this->persona_model->fields['nacionalidad']['array'] = $array_nacionalidad;
		$this->persona_model->fields['nivel_estudio']['array'] = $array_nivel_estudio;
		$this->persona_model->fields['obra_social']['array'] = $array_obra_social;
		$this->persona_model->fields['ocupacion']['array'] = $array_ocupacion;
		$this->persona_model->fields['prestadora']['array'] = $array_prestadora;
		$this->persona_model->fields['sexo']['array'] = $array_sexo;

	//	$this->persona_model->fields['apellido']['disabled'] = true;
	//	$this->persona_model->fields['nombre']['disabled'] = true;
		$this->persona_model->fields['documento_tipo']['disabled'] = true;
		$this->persona_model->fields['documento']['readonly'] = true;
		$data['fields'] = $this->build_fields($this->persona_model->fields, $persona);
		$data['parientes'] = $this->familia_model->get_familiares($persona->id);
		$data['alumno'] = $this->alumno_model->get_trayectoria_alumno($persona->id);
		$data['txt_btn'] = 'Editar';
		$data['persona'] = $persona;
		$data['class'] = array('agregar' => '', 'ver' => '', 'editar' => 'active btn-app-zetta-active', 'eliminar' => '', 'titulo' => '');
		$data['title'] = TITLE . ' - Editar persona';
		$this->load_template('titulo_persona/titulo_persona_ver', $data);
	}

	public function eliminar($id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $id == NULL || !ctype_digit($id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		if (!$this->edicion) {
			$this->session->set_flashdata('error', 'No tiene permisos para la acción solicitada');
			redirect("titulo_persona/titulo_persona_ver/$id");
		}

		$persona = $this->persona_model->get_one($id);
		if (empty($persona)) {
			show_error('No se encontró el registro a eliminar', 500, 'Registro no encontrado');
		}

		if (isset($_POST) && !empty($_POST)) {
			if ($id !== $this->input->post('id')) {
				show_error('Esta solicitud no pasó el control de seguridad.');
			}

			$trans_ok = TRUE;
			$trans_ok &= $this->persona_model->delete(array('id' => $this->input->post('id')));
			if ($trans_ok) {
				$this->session->set_flashdata('message', $this->persona_model->get_msg());
				redirect('titulos/titulo_persona/listar', 'refresh');
			}
		}
		$data['error'] = (validation_errors() ? validation_errors() : ($this->persona_model->get_error() ? $this->persona_model->get_error() : $this->session->flashdata('error')));

		$data['fields'] = $this->build_fields($this->persona_model->fields, $persona, TRUE);

		$data['persona'] = $persona;

		$data['txt_btn'] = 'Eliminar';
		$data['class'] = array('agregar' => '', 'ver' => '', 'editar' => '', 'eliminar' => 'active btn-app-zetta-active', 'titulo' => '');
		$data['title'] = TITLE . ' - Eliminar persona';
		$this->load_template('titulos/titulo_persona/titulo_persona_modal_abm', $data);
	}

	public function ver($id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $id == NULL || !ctype_digit($id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$persona = $this->persona_model->get_one($id);
		if (empty($persona)) {
			show_error('No se encontró el registro a ver', 500, 'Registro no encontrado');
		}
		$this->load->model('familia_model');
		$this->load->model('alumno_model');
		$this->load->model('servicio_model');
		$this->load->model('tbcabh_model');

		$data['parientes'] = $this->familia_model->get_familiares($persona->id);
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['fields'] = $this->build_fields($this->persona_model->fields, $persona, TRUE);
		$data['servicios'] = $this->servicio_model->get_servicios_persona($persona->id);
		$data['liquidaciones'] = $this->tbcabh_model->get_by_persona($persona->cuil);
		$data['alumno'] = $this->alumno_model->get_trayectoria_alumno($persona->id);
		$horarios_servicios_db = $this->servicio_model->get_horario_by_persona($persona->id);
		$horarios_servicios = array();
		foreach ($horarios_servicios_db as $hs) {
			if (!isset($horarios_servicios[$hs->servicio_id])) {
				$horarios_servicios[$hs->servicio_id] = $hs;
				$horarios_servicios[$hs->servicio_id]->horarios = array();
			}
			if (!isset($horarios_servicios[$hs->servicio_id]->dias[$hs->dia_id])) {
				$horarios_servicios[$hs->servicio_id]->dias[$hs->dia_id] = $hs;
				$horarios_servicios[$hs->servicio_id]->dias[$hs->dia_id]->horarios = array();
			}
			$horarios_servicios[$hs->servicio_id]->dias[$hs->dia_id]->horarios[] = $hs;
		}
		$data['horarios_servicios'] = $horarios_servicios;
		$data['persona'] = $persona;
		$data['class'] = array('agregar' => '', 'ver' => 'active btn-app-zetta-active', 'editar' => '', 'eliminar' => '', 'titulo' => '');
		$data['txt_btn'] = 'ver';
		$data['title'] = TITLE . ' - Ver persona';
		$this->load_template('titulos/titulo_persona/titulo_persona_ver', $data);
	}

	public function ver_titulo($id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $id == NULL || !ctype_digit($id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$persona = $this->persona_model->get_one($id);
		if (empty($persona)) {
			show_error('No se encontró el registro a ver', 500, 'Registro no encontrado');
		}
		$this->load->model('titulo_model');
		$titulos = $this->titulo_persona_model->get(array(
			'persona_id' => $id,
			'join' => array(
				array('titulo', 'titulo.id = titulo_persona.titulo_id', 'left', array('titulo.nombre', 'titulo.duracion')),
				array('persona', 'persona.id = titulo_persona.persona_id', 'left', array('CONCAT(persona.apellido, \', \', persona.nombre) as persona', 'persona.cuil')),
				array('titulo_tipo', 'titulo_tipo.id = titulo.titulo_tipo_id', 'left', array('titulo_tipo.descripcion as tipo')),
				array('titulo_establecimiento', 'titulo_establecimiento.id = titulo.titulo_establecimiento_id', 'left', array('titulo_establecimiento.descripcion as establecimiento'))
			),
		));

		$data['titulos'] = $titulos;
		$data['persona'] = $persona;
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['titulo_id'] = $this->session->flashdata('titulo_id');
		$data['txt_btn'] = NULL;
		$data['class'] = array('agregar' => '', 'ver' => '', 'editar' => '', 'eliminar' => '', 'titulo' => 'active btn-app-zetta-active', 'establecimiento' => '', 'tipo' => '');
		$data['title'] = TITLE . ' - Ver Títulos de Persona';
		$data['css'][] = 'plugins/bootstrap-datepicker/css/bootstrap-datepicker.min.css';
		$data['js'][] = 'plugins/bootstrap-datepicker/js/bootstrap-datepicker.min.js';
		$data['js'][] = 'plugins/bootstrap-datepicker/locales/bootstrap-datepicker.es.min.js';
		$this->load_template('titulo_persona/titulo_persona_listar', $data);
	}

	public function modal_agregar_titulo($id) {

		$persona = $this->persona_model->get_one($id);
		if (empty($persona)) {
			show_error('No se encontró el registro a ver', 500, 'Registro no encontrado');
		}
		$this->load->model('titulo_persona_model');
		$this->load->model('titulo_model');
		$this->titulo_persona_model->fields['persona']['value'] = "$persona->apellido, $persona->nombre";
		$this->array_titulo_control = $array_titulo = $this->get_array('titulo', 'titulo', 'id', array(
			'select' => array('titulo.id', "CONCAT(tt.descripcion, '-', te.descripcion, '-', titulo.nombre) titulo"),
			'join' => array(
				array('titulo_establecimiento te', 'te.id=titulo.titulo_establecimiento_id'),
				array('titulo_tipo tt', 'tt.id=titulo.titulo_tipo_id')
			),
			'sort_by' => 'tt.descripcion'
			), array('' => '-- Seleccionar Título --'));

		$this->set_model_validation_rules($this->titulo_persona_model);
		if (isset($_POST) && !empty($_POST)) {
			if ($this->form_validation->run() === TRUE) {
				$trans_ok = TRUE;
				$trans_ok &= $this->titulo_persona_model->create(array(
					'persona_id' => $persona->id,
					'titulo_id' => $this->input->post('titulo'),
					'fecha_ingreso' => $this->get_date_sql('fecha_ingreso'),
					'fecha_egreso' => $this->get_date_sql('fecha_egreso'),
					'fecha_certificacion' => $this->get_date_sql('fecha_certificacion'),
					'serie' => $this->input->post('serie'),
					'numero' => $this->input->post('numero'),
					'observaciones' => $this->input->post('observaciones'),));

				if ($trans_ok) {
					$this->session->set_flashdata('message', $this->titulo_persona_model->get_msg());
				} else {
					$this->session->set_flashdata('error', $this->titulo_persona_model->get_error());
				}
				redirect("titulos/titulo_persona/ver_titulo/$persona->id", 'refresh');
			} else {
				$this->session->set_flashdata('error', validation_errors());
				redirect("titulos/titulo_persona/ver_titulo/$persona->id", 'refresh');
			}
		}
		$this->titulo_persona_model->fields['titulo']['array'] = $array_titulo;
		$data['fields'] = $this->build_fields($this->titulo_persona_model->fields);
		$data['txt_btn'] = 'Agregar';
		$data['title'] = 'Agregar Título';
		$this->load->view('titulo/titulo_modal_agregar', $data);
	}

	public function modal_editar_titulo($titulo_persona_id = NULL) {

		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $titulo_persona_id == NULL || !ctype_digit($titulo_persona_id)) {
			$this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
			return;
		}
		$titulo_persona = $this->titulo_persona_model->get_one($titulo_persona_id);
		if (empty($titulo_persona)) {
			$this->modal_error('No se encontró el registro a editar', 'Registro no encontrado');
			return;
		}
		$this->load->model('titulo_model');
		$this->array_titulo_control = $array_titulo = $this->get_array('titulo', 'nombre', 'id', array('sort_by' => 'id'), array('' => '-- Seleccionar Título --'));
		$this->set_model_validation_rules($this->titulo_persona_model);
		if (isset($_POST) && !empty($_POST)) {
			if ($this->form_validation->run() === TRUE) {
				if ($titulo_persona_id !== $this->input->post('id')) {
					show_error('Esta solicitud no pasó el control de seguridad.', 500, 'Acción no autorizada');
				}

				$trans_ok = TRUE;
				$trans_ok &= $this->titulo_persona_model->update(array(
					'id' => $titulo_persona->id,
					'titulo_id' => $this->input->post('titulo'),
					'fecha_ingreso' => $this->get_date_sql('fecha_ingreso'),
					'fecha_egreso' => $this->get_date_sql('fecha_egreso'),
					'fecha_certificacion' => $this->get_date_sql('fecha_certificacion'),
					'serie' => $this->input->post('serie'),
					'numero' => $this->input->post('numero'),
					'observaciones' => $this->input->post('observaciones'),));
				if ($trans_ok) {
					$this->session->set_flashdata('message', $this->titulo_persona_model->get_msg());
				} else {
					$this->session->set_flashdata('error', $this->titulo_persona_model->get_error());
				}
				redirect("titulos/titulo_persona/ver_titulo/$titulo_persona->persona_id", 'refresh');
			} else {
				$this->session->set_flashdata('error', validation_errors());
				redirect("titulos/titulo_persona/ver_titulo/$titulo_persona->persona_id", 'refresh');
			}
		}

		$this->titulo_persona_model->fields['titulo']['array'] = $array_titulo;
		$data['fields'] = $this->build_fields($this->titulo_persona_model->fields, $titulo_persona);
		$data['titulo_persona'] = $titulo_persona;
		$data['txt_btn'] = 'Editar';
		$data['title'] = 'Editar Título de persona';
		$this->load->view('titulo_persona/titulo_persona_modal_abm', $data);
	}

	public function modal_eliminar_titulo($titulo_persona_id = NULL) {
		$titulo_persona = $this->titulo_persona_model->get_one($titulo_persona_id);
		if (empty($titulo_persona)) {
			$this->modal_error('No se encontró el registro a editar', 'Registro no encontrado');
			return;
		}

		if (isset($_POST) && !empty($_POST)) {
			if ($titulo_persona_id !== $this->input->post('id')) {
				show_error('Esta solicitud no pasó el control de seguridad.', 500, 'Acción no autorizada');
			}

			$trans_ok = TRUE;
			$trans_ok &= $this->titulo_persona_model->delete(array('id' => $this->input->post('id')));
			if ($trans_ok) {
				$this->session->set_flashdata('message', $this->titulo_persona_model->get_msg());
			} else {
				$this->session->set_flashdata('error', $this->titulo_persona_model->get_error());
			}
			redirect("titulos/titulo_persona/ver_titulo/$titulo_persona->persona_id", 'refresh');
		}
		$data['fields'] = $this->build_fields($this->titulo_persona_model->fields, $titulo_persona, TRUE);
		$data['titulo_persona'] = $titulo_persona;
		$data['txt_btn'] = 'Eliminar';
		$data['title'] = 'Eliminar título de persona';
		$this->load->view('titulo_persona/titulo_persona_modal_abm', $data);
	}

	public function cargar_establecimiento_modal($id = NULL) {
		$this->load->model('titulos/titulo_establecimiento_model');
		$persona = $this->persona_model->get_one($id);
		if (empty($persona)) {
			$this->modal_error('Error', 'Registro no encontrado');
			return;
		}
		$this->set_model_validation_rules($this->titulo_establecimiento_model);
		if (isset($_POST) && !empty($_POST)) {
			if ($this->form_validation->run() === TRUE) {
				$trans_ok = TRUE;
				$trans_ok&= $this->titulo_establecimiento_model->create(array(
					'descripcion' => $this->input->post('descripcion')));

				if ($trans_ok) {
					$this->session->set_flashdata('message', $this->titulo_establecimiento_model->get_msg());
				} else {
					$this->session->set_flashdata('error', $this->titulo_establecimiento_model->get_error());
				}
				redirect("titulos/titulo_persona/ver_titulo/$persona->id", 'refresh');
			} else {
				$this->session->set_flashdata('error', validation_errors());
				redirect("titulos/titulo_persona/ver_titulo/$persona->id", 'refresh');
			}
		}
		$data['fields'] = $this->build_fields($this->titulo_establecimiento_model->fields);
		$data['txt_btn'] = 'Agregar';
		$data['title'] = 'Agregar establecimiento';
		$this->load->view('titulos/titulo_establecimiento/titulo_establecimiento_modal_abm', $data);
	}
	public function cargar_tipo_titulo_modal($id = NULL) {
		$this->load->model('titulos/titulo_tipo_model');
		$persona = $this->persona_model->get_one($id);
		if (empty($persona)) {
			$this->modal_error('Error', 'Registro no encontrado');
			return;
		}
			$this->set_model_validation_rules($this->titulo_tipo_model);
		if (isset($_POST) && !empty($_POST)) {
			if ($this->form_validation->run() === TRUE) {
				$trans_ok = TRUE;
				$trans_ok&= $this->titulo_tipo_model->create(array(
					'descripcion' => $this->input->post('descripcion')));
				if ($trans_ok) {
					$this->session->set_flashdata('message', $this->titulo_tipo_model->get_msg());
				} else {
					$this->session->set_flashdata('error', $this->titulo_tipo_model->get_error());
				}
			redirect("titulos/titulo_persona/ver_titulo/$persona->id", 'refresh');
			} else {
				$this->session->set_flashdata('error', validation_errors());
				redirect("titulos/titulo_persona/ver_titulo/$persona->id", 'refresh');
			}
		}
		
		$data['fields'] = $this->build_fields($this->titulo_tipo_model->fields);
		$data['txt_btn'] = 'Agregar';
		$data['title'] = 'Agregar Carrera';
		$this->load->view('titulos/titulo_tipo/titulo_tipo_modal_abm', $data);
	}
	
}
/* End of file Titulo_persona.php */
/* Location: ./application/modules/titulos/controllers/Titulo_persona.php */