<?php

include_once "Response.php";

class Service extends CI_Controller {

	function __construct() {
		parent::__construct();
		$this->load->library("Nusoap");

		$ns = "servicio";
		$this->nusoap_server = new soap_server();
		$this->nusoap_server->configureWSDL("SOAP Server", $ns);
		$this->nusoap_server->wsdl->schemaTargetNamespace = $ns;

		////////////////////////// CREANDO TIPOS /////////////////////////////////	

		$this->nusoap_server->wsdl->addComplexType(
			"Escuela", "complexType", "struct", "all", "", array(
			"numero_escuela" => array("name" => "numero_escuela", "type" => "xsd:string"),
			"nombre_escuela" => array("name" => "nombre_escuela", "type" => "xsd:string"),
			"curso" => array("name" => "curso", "type" => "xsd:string"),
			"division" => array("name" => "division", "type" => "xsd:string"),
			"calle" => array("name" => "calle", "type" => "xsd:string"),
			"calle_numero" => array("name" => "calle_numero", "type" => "xsd:string"),
			"depto" => array("name" => "depto", "type" => "xsd:string"),
			"piso" => array("name" => "piso", "type" => "xsd:string"),
			"barrio" => array("name" => "barrio", "type" => "xsd:string"),
			"manzana" => array("name" => "manzana", "type" => "xsd:string"),
			"casa" => array("name" => "casa", "type" => "xsd:string"),
			"localidad" => array("name" => "localidad", "type" => "xsd:string"),
			"departamento" => array("name" => "departamento", "type" => "xsd:string"),
			"provincia" => array("name" => "provincia", "type" => "xsd:string"),
			"codigo_postal" => array("name" => "codigo_postal", "type" => "xsd:string"),
			"nivel" => array("name" => "nivel", "type" => "xsd:string")
		));


		$this->nusoap_server->wsdl->addComplexType(
			'ArrayOfEscuela', 'complexType', 'array', '', 'SOAP-ENC:Array', array(), array(
			array(
				'ref' => 'SOAP-ENC:arrayType',
				'wsdl:arrayType' => 'tns:Escuela[]'
			)
			), 'tns:Escuela');

		$this->nusoap_server->wsdl->addComplexType(
			"Alumno", "complexType", "struct", "all", "", array(
			"cuil" => array("name" => "cuil", "type" => "xsd:string"),
			"tipo_documento" => array("name" => "tipo_documento", "type" => "xsd:string"),
			"documento" => array("name" => "documento", "type" => "xsd:int"),
			"apellido" => array("name" => "apellido", "type" => "xsd:string"),
			"nombre" => array("name" => "nombre", "type" => "xsd:string"),
			"sexo" => array("name" => "sexo", "type" => "xsd:string"),
			"estado_civil" => array("name" => "estado_civil", "type" => "xsd:string"),
			"fecha_nacimiento" => array("name" => "fecha_nacimiento", "type" => "xsd:string"),
			"nacionalidad" => array("name" => "nacionalidad", "type" => "xsd:string"),
			"telefono_fijo" => array("name" => "telefono_fijo", "type" => "xsd:int"),
			"telefono_movil" => array("name" => "telefono_movil", "type" => "xsd:int"),
			"email" => array("name" => "email", "type" => "xsd:string"),
			"calle" => array("name" => "calle", "type" => "xsd:string"),
			"calle_numero" => array("name" => "calle_numero", "type" => "xsd:int"),
			"depto" => array("name" => "depto", "type" => "xsd:string"),
			"piso" => array("name" => "piso", "type" => "xsd:string"),
			"casa" => array("name" => "casa", "type" => "xsd:string"),
			"manzana" => array("name" => "manzana", "type" => "xsd:string"),
			"provincia" => array("name" => "provincia", "type" => "xsd:string"),
			"departamento" => array("name" => "departamento", "type" => "xsd:string"),
			"localidad" => array("name" => "localidad", "type" => "xsd:string"),
			"nombre_padre" => array("name" => "nombre_padre", "type" => "xsd:string"),
			"documento_padre" => array("name" => "documento_padre", "type" => "xsd:string"),
			"nombre_madre" => array("name" => "nombre_madre", "type" => "xsd:string"),
			"documento_madre" => array("name" => "documento_madre", "type" => "xsd:string"),
			"escuelas" => array("name" => "escuelas", "type" => "tns:ArrayOfEscuela")
		));
		$this->nusoap_server->wsdl->addComplexType(
			"Docente", "complexType", "struct", "all", "", array(
			"cuil" => array("name" => "cuil", "type" => "xsd:string"),
			"tipo_documento" => array("name" => "tipo_documento", "type" => "xsd:string"),
			"documento" => array("name" => "documento", "type" => "xsd:int"),
			"apellido" => array("name" => "apellido", "type" => "xsd:string"),
			"nombre" => array("name" => "nombre", "type" => "xsd:string"),
			"sexo" => array("name" => "sexo", "type" => "xsd:string"),
			"estado_civil" => array("name" => "estado_civil", "type" => "xsd:string"),
			"fecha_nacimiento" => array("name" => "fecha_nacimiento", "type" => "xsd:string"),
			"nacionalidad" => array("name" => "nacionalidad", "type" => "xsd:string"),
			"telefono_fijo" => array("name" => "telefono_fijo", "type" => "xsd:int"),
			"telefono_movil" => array("name" => "telefono_movil", "type" => "xsd:int"),
			"email" => array("name" => "email", "type" => "xsd:string"),
			"calle" => array("name" => "calle", "type" => "xsd:string"),
			"calle_numero" => array("name" => "calle_numero", "type" => "xsd:int"),
			"depto" => array("name" => "depto", "type" => "xsd:string"),
			"piso" => array("name" => "piso", "type" => "xsd:string"),
			"casa" => array("name" => "casa", "type" => "xsd:string"),
			"barrio" => array("name" => "barrio", "type" => "xsd:string"),
			"manzana" => array("name" => "manzana", "type" => "xsd:string"),
			"provincia" => array("name" => "provincia", "type" => "xsd:string"),
			"departamento" => array("name" => "departamento", "type" => "xsd:string"),
			"localidad" => array("name" => "localidad", "type" => "xsd:string"),
			"escuelas" => array("name" => "escuelas", "type" => "tns:ArrayOfEscuela")
		));

		$this->nusoap_server->wsdl->addComplexType(
			'ArrayOfAlumno', 'complexType', 'array', '', 'SOAP-ENC:Array', array(), array(
			array(
				'ref' => 'SOAP-ENC:arrayType',
				'wsdl:arrayType' => 'tns:Alumno[]'
			)
			), 'tns:Alumno');

		$this->nusoap_server->wsdl->addComplexType(
			'ArrayOfDocente', 'complexType', 'array', '', 'SOAP-ENC:Array', array(), array(
			array(
				'ref' => 'SOAP-ENC:arrayType',
				'wsdl:arrayType' => 'tns:Docente[]'
			)
			), 'tns:Docente');


		$this->nusoap_server->wsdl->addComplexType(
			'Response_array_alumno', 'complexType', 'struct', 'all', '', array
			('responseCode' => array('type' => 'xsd:int'),
			'responseMessage' => array('type' => 'xsd:string'),
			'data' => array('type' => 'tns:ArrayOfAlumno')
			)
		);

		$this->nusoap_server->wsdl->addComplexType(
			'Response_array_docente', 'complexType', 'struct', 'all', '', array
			('responseCode' => array('type' => 'xsd:int'),
			'responseMessage' => array('type' => 'xsd:string'),
			'data' => array('type' => 'tns:ArrayOfDocente')
			)
		);

		$this->nusoap_server->wsdl->addComplexType(
			'Response_alumno', 'complexType', 'struct', 'all', '', array
			('responseCode' => array('type' => 'xsd:int'),
			'responseMessage' => array('type' => 'xsd:string'),
			'data' => array('type' => 'tns:Alumno')
			)
		);
		$this->nusoap_server->wsdl->addComplexType(
			'Response_docente', 'complexType', 'struct', 'all', '', array
			('responseCode' => array('type' => 'xsd:int'),
			'responseMessage' => array('type' => 'xsd:string'),
			'data' => array('type' => 'tns:Docente')
			)
		);

		$this->nusoap_server->wsdl->addComplexType(
			'Input_alumno', 'complexType', 'struct', 'all', '', array(
			'dni' => array('type' => 'xsd:string'),
			'apellido' => array('type' => 'xsd:string'),
			'nombre' => array('type' => 'xsd:string'),
			'escuela' => array('type' => 'xsd:string')
			)
		);

		//get_alumnos
		$this->nusoap_server->register(
			"get_alumnos", array(
			'apy_key' => "xsd:string",
			'alumnos' => "xsd:Input_alumno"
			), array("return" => "tns:Response_array_alumno"), $ns, $ns . "#get_alumnos", "rpc", "encoded", "Servicio que retorna alumnos "
		);
		//get_alumno
		$this->nusoap_server->register(
			"get_alumno", array(
			'apy_key' => "xsd:string",
			'dni' => "xsd:string"
			), array("return" => "tns:Response_alumno"), $ns, $ns . "#get_alumnos", "rpc", "encoded", "Servicio que retorna alumno "
		);
		//get_docente
		$this->nusoap_server->register(
			"get_docente", array(
			'apy_key' => "xsd:string",
			'dni' => "xsd:string"
			), array("return" => "tns:Response_docente"), $ns, $ns . "#get_docente", "rpc", "encoded", "Servicio que retorna docente "
		);
		//get_docentes
		$this->nusoap_server->register(
			"get_docentes", array(
			'apy_key' => "xsd:string",
			'docentes' => "xsd:Input_alumno"
			), array("return" => "tns:Response_array_docente"), $ns, $ns . "#get_docentes", "rpc", "encoded", "Servicio que retorna docentes "
		);
	}

	function index() {
		function valida_key($key) {
			$key_alumnos = '954dfdd6e70461f9542f651fb93b0f40d2d415c9bc0e7dab823abc2e96e54874';
			if ($key_alumnos == $key) {
				return true;
			} else {
				return false;
			}
		}
		function parseEscuela($alumno) {
			$datos_escuelas = array();
			if (!empty($alumno)) {
				if (sizeof($alumno) > 1) {
					foreach ($alumno as $escuela) {
						$nombres_escuela = array();
						$nombres_escuela['numero_escuela'] = $escuela->numero_escuela;
						$nombres_escuela['nombre_escuela'] = $escuela->nombre_escuela;
						$nombres_escuela['curso'] = $escuela->curso;
						$nombres_escuela['division'] = $escuela->division;
						$nombres_escuela['calle'] = $escuela->calle;
						$nombres_escuela['calle_numero'] = $escuela->calle_numero;
						$nombres_escuela['depto'] = $escuela->depto;
						$nombres_escuela['piso'] = $escuela->piso;
						$nombres_escuela['barrio'] = $escuela->barrio;
						$nombres_escuela['manzana'] = $escuela->manzana;
						$nombres_escuela['casa'] = $escuela->casa;
						$nombres_escuela['localidad'] = $escuela->localidad;
						$nombres_escuela['departamento'] = $escuela->departamento;
						$nombres_escuela['provincia'] = $escuela->provincia;
						$nombres_escuela['codigo_postal'] = $escuela->codigo_postal;
						$nombres_escuela['nivel'] = $escuela->nivel;
						array_push($datos_escuelas, $nombres_escuela);
					}
				} else {
					$nombres_escuela = array();
					$nombres_escuela['numero_escuela'] = $alumno[0]->numero_escuela;
					$nombres_escuela['nombre_escuela'] = $alumno[0]->nombre_escuela;
					$nombres_escuela['curso'] = $alumno[0]->curso;
					$nombres_escuela['division'] = $alumno[0]->division;
					$nombres_escuela['calle'] = $alumno[0]->calle;
					$nombres_escuela['calle_numero'] = $alumno[0]->calle_numero;
					$nombres_escuela['depto'] = $alumno[0]->depto;
					$nombres_escuela['piso'] = $alumno[0]->piso;
					$nombres_escuela['barrio'] = $alumno[0]->barrio;
					$nombres_escuela['manzana'] = $alumno[0]->manzana;
					$nombres_escuela['casa'] = $alumno[0]->casa;
					$nombres_escuela['localidad'] = $alumno[0]->localidad;
					$nombres_escuela['departamento'] = $alumno[0]->departamento;
					$nombres_escuela['provincia'] = $alumno[0]->provincia;
					$nombres_escuela['codigo_postal'] = $alumno[0]->codigo_postal;
					$nombres_escuela['nivel'] = $alumno[0]->nivel;
					array_push($datos_escuelas, $nombres_escuela);
				}
			}
			return $datos_escuelas;
		}
		function get_alumnos($alumnos, $apy_key) {
			if (valida_key($apy_key) && !empty($alumnos)) {
				$ci = & get_instance();
				$ci->load->model('transporte/transporte_model');
				$datos = array();
				foreach ($alumnos as $alumno) {
					$return_escuela = $ci->transporte_model->get_alumno_escuela($alumno['dni']);
					$datos_escuela = parseEscuela($return_escuela);
					$return_alumno = $ci->transporte_model->get_alumno($alumno['dni']);
					if (!empty($return_alumno)) {
						$return_alumno->escuelas = $datos_escuela;
						array_push($datos, $return_alumno);
					}
				}
				$result = new Response();
				if (!empty($datos)) {
					$result->responseCode = 0;
					$result->responseMessage = 'Alumnos encontrados';
					$result->data = $datos;
				} else {
					$result->responseCode = 0;
					$result->responseMessage = 'Alumnos no encontrados';
					$result->data = $datos;
				}
				return $result;
			} else {
				$result->responseCode = 500;
				$result->responseMessage = 'Error de validación';
				$result->data = NULL;
			}
		}
		function get_alumno($dni, $apy_key) {
			if (valida_key($apy_key) && !empty($dni)) {
				$ci = & get_instance();
				$ci->load->model('transporte/transporte_model');
				$return_escuela = $ci->transporte_model->get_alumno_escuela($dni);
				$datos_escuela = parseEscuela($return_escuela);
				$return_alumno = $ci->transporte_model->get_alumno($dni);
				if (!empty($return_alumno)) {
					$return_alumno->escuelas = $datos_escuela;
				}
				$result = new Response();
				if (!empty($return_alumno)) {
					$result->responseCode = 0;
					$result->responseMessage = 'Alumnos encontrados';
					$result->data = $return_alumno;
				} else {
					$result->responseCode = 0;
					$result->responseMessage = 'Alumnos no encontrados';
					$result->data = $return_alumno;
				}
				return $result;
			} else {
				$result->responseCode = 500;
				$result->responseMessage = 'Error de validación';
				$result->data = NULL;
			}
		}
		function get_docente($dni, $apy_key) {
			if (valida_key($apy_key) && !empty($dni)) {
				$ci = & get_instance();
				$ci->load->model('transporte/transporte_model');
				$return_escuela = $ci->transporte_model->get_docente_escuela($dni);
				$datos_escuela = parseEscuela($return_escuela);
				$return_docente = $ci->transporte_model->get_docente($dni);
				if (!empty($return_docente)) {
					$return_docente->escuelas = $datos_escuela;
				}
				$result = new Response();
				if (!empty($return_docente)) {
					$result->responseCode = 0;
					$result->responseMessage = 'Docente encontrado';
					$result->data = $return_docente;
				} else {
					$result->responseCode = 0;
					$result->responseMessage = 'Docente no encontrado';
					$result->data = $return_docente;
				}
				return $result;
			} else {
				$result->responseCode = 500;
				$result->responseMessage = 'Error de validación';
				$result->data = NULL;
			}
		}
		function get_docentes($docentes, $apy_key) {
			if (valida_key($apy_key) && !empty($docentes)) {
				$ci = & get_instance();
				$ci->load->model('transporte/transporte_model');
				$datos = array();
				foreach ($docentes as $docente) {
					$return_escuela = $ci->transporte_model->get_docente_escuela($docente['dni']);
					$datos_escuela = parseEscuela($return_escuela);
					$return_docente = $ci->transporte_model->get_docente($docente['dni']);
					if (!empty($return_docente)) {
						$return_docente->escuelas = $datos_escuela;
						array_push($datos, $return_docente);
					}
				}
				$result = new Response();
				if (!empty($datos)) {
					$result->responseCode = 0;
					$result->responseMessage = 'Docentes encontrados';
					$result->data = $datos;
				} else {
					$result->responseCode = 0;
					$result->responseMessage = 'Docentes no encontrados';
					$result->data = $datos;
				}
				return $result;
			} else {
				$result->responseCode = 500;
				$result->responseMessage = 'Error de validación';
				$result->data = NULL;
			}
		}
		$this->nusoap_server->service(file_get_contents("php://input"));
	}
}