<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Cursada extends MY_Controller {

	function __construct() {
		parent::__construct();
		$this->load->model('cursada_model');
		$this->load->model('division_model');
		$this->load->model('escuela_model');
		$this->load->model('cargo_cursada_model');
		$this->roles_permitidos = array_diff(explode(',', ROLES), array(ROL_ESCUELA_ALUM));
		if (in_array($this->rol->codigo, array(ROL_SUPERVISION, ROL_CONSULTA, ROL_CONSULTA_LINEA, ROL_REGIONAL, ROL_ESCUELA_ALUM))) {
			$this->edicion = FALSE;
		}
		$this->nav_route = 'menu/cursada';
	}

	public function listar($division_id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $division_id == NULL || !ctype_digit($division_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}

		$division = $this->division_model->get_one($division_id);
		if (empty($division) || !empty($division->fecha_baja)) {
			show_error('No se encontró el registro de la división', 500, 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			show_error('No se encontró el registro de la escuela', 500, 'Registro no encontrado');
		}
		$cursadas_division = $this->cursada_model->get_cursadas($division->id);

		if (!$this->usuarios_model->verificar_permiso('escuela', $this->rol, $escuela)) {
			show_error('No tiene permisos para acceder a la escuela', 500, 'Acción no autorizada');
		}

		$data['cursadas_division'] = $cursadas_division;
		$data['escuela'] = $escuela;
		$data['division'] = $division;
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['title'] = TITLE . ' - Cursadas';
		$this->load_template('cursada/cursada_listar', $data);
	}

	public function agregar($division_id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $division_id == NULL || !ctype_digit($division_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
			return;
		}

		$division = $this->division_model->get_one($division_id);
		if (empty($division) || !empty($division->fecha_baja)) {
			show_error('No se encontró el registro de la división', 500, 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			show_error('No se encontró el registro de la escuela', 500, 'Registro no encontrado');
		}
		$cursadas_division = $this->cursada_model->get_cursadas($division->id);
		if (!$this->usuarios_model->verificar_permiso('escuela', $this->rol, $escuela)) {
			show_error('No tiene permisos para acceder a la escuela', 500, 'Acción no autorizada');
		}

		$this->load->model('espacio_curricular_model');
		$this->array_espacio_curricular_control = $array_espacio_curricular = $this->get_array('espacio_curricular', 'materia', 'id', array(
			'select' => array('espacio_curricular.id', 'materia.descripcion materia'),
			'join' => array(
				array('division', 'division.curso_id=espacio_curricular.curso_id AND division.carrera_id=espacio_curricular.carrera_id'),
				array('materia', 'materia.id=espacio_curricular.materia_id')
			),
			'where' => array("division.id=$division->id")
		));
		$this->array_optativo_control = array('Si' => 'Si', 'No' => 'No');
		$this->form_validation->set_rules("extra[]", 'Extra', 'trim');
		$this->form_validation->set_rules("cursada[]", 'EC', 'callback_control_combo[espacio_curricular]|required');
		$this->form_validation->set_rules("optativa[]", 'Optativo', 'callback_control_combo[optativo]');
		$this->form_validation->set_rules('carga_horaria[]', 'Carga horaria', 'integer');
		if (isset($_POST) && !empty($_POST)) {
			if (empty($this->input->post('cursada'))) {
				$this->session->set_flashdata('error', 'Debe seleccionar al menos una materia');
				redirect("cursada/agregar/$division_id", 'refresh');
			}
			if ($this->form_validation->run() === TRUE) {
				$this->db->trans_begin();
				$p_carga_horaria = $this->input->post('carga_horaria');
				$p_cursadas = $this->input->post('cursada');
				$p_extras = $this->input->post('extra');
				$p_optatitvas = $this->input->post('optativa');
				$trans_ok = TRUE;
				foreach ($p_cursadas as $p_id => $p_cursada) {
					$consulta = $this->cursada_model->consulta($p_extras[$p_id], $p_cursadas[$p_id]);
					if (!empty($consulta)) {
						$errors = "Estas cursadas ya fueron cargadas:";
						foreach ($consulta as $materia) {
							$errors .= '<br>' . $materia->materia;
						}
						$this->session->set_flashdata('error', $errors);
						redirect("cursada/listar/$division->id", 'refresh');
					}
				}
				foreach ($p_cursadas as $p_id => $p_cursada) {
					$espacio_curricular = $this->espacio_curricular_model->get_one($p_cursadas[$p_id]);
					$trans_ok &= $this->cursada_model->create(array(
						'division_id' => $division->id,
						'espacio_curricular_id' => $p_cursadas[$p_id],
						'carga_horaria' => !empty($p_carga_horaria[$p_id]) ? $p_carga_horaria[$p_id] : $espacio_curricular->carga_horaria,
						'optativo' => $p_optatitvas[$p_id],
						'extra' => $p_extras[$p_id],
						'fecha_desde' => '2017-01-01')
					);
				}
				if ($trans_ok) {
					$this->db->trans_commit();
					$this->session->set_flashdata('message', $this->cursada_model->get_msg());
					redirect("cursada/listar/$division_id", 'refresh');
				} else {
					$this->db->trans_rollback();
					$this->session->set_flashdata('error', $this->cursada_model->get_error());
					redirect("cursada/listar/$division_id", 'refresh');
				}
			} else {
				$this->session->set_flashdata('error', validation_errors());
				redirect("cursada/listar/$division_id", 'refresh');
			}
		}

		$data['cursadas_division'] = $cursadas_division;
		$data['cursadas'] = $this->cursada_model->get_by_division($division->id);
		$data['espacios_curriculares'] = $array_espacio_curricular;
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['escuela'] = $escuela;
		$data['division'] = $division;
		$data['txt_btn'] = 'Agregar';
		$data['class'] = array('agregar' => 'active btn-app-zetta-active', 'ver' => 'disabled', 'editar' => 'disabled', 'eliminar' => 'disabled');
		$data['title'] = TITLE . ' - Agregar cursada';
		$this->load_template('cursada/cursada_agregar', $data);
	}

	public function modal_editar($id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $id == NULL || !ctype_digit($id)) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		if ($this->edicion === FALSE) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		$cursada = $this->cursada_model->get_one($id);
		if (empty($cursada)) {
			return $this->modal_error('No se encontró el registro a editar', 'Registro no encontrado');
		}
		$division = $this->division_model->get_one($cursada->division_id);
		if (empty($division) || !empty($division->fecha_baja)) {
			return $this->modal_error('No se encontró el registro de la división', 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			return $this->modal_error('No se encontró el registro de la escuela', 'Registro no encontrado');
		}
		if (!$this->usuarios_model->verificar_permiso('escuela', $this->rol, $escuela)) {
			return $this->modal_error('No tiene permisos para acceder a la escuela', 'Acción no autorizada');
		}
		$this->cursada_model->fields['carga_horaria']['min'] = $cursada->carga_horaria_cargos;

		$this->array_optativo_control = $this->cursada_model->fields['optativo']['array'];
		$this->form_validation->set_rules("extra", 'Extra', 'trim');
		$this->form_validation->set_rules("optativo", 'Optativo', 'callback_control_combo[optativo]');
		$this->form_validation->set_rules('carga_horaria', 'Carga horaria', 'integer');
		if (isset($_POST) && !empty($_POST)) {
			if ($id !== $this->input->post('id')) {
				show_error('Esta solicitud no pasó el control de seguridad.');
			}
			if ($this->form_validation->run() === TRUE) {
				$extra = $this->input->post('extra');
				$espacio_curricular_id = $this->input->post('espacio_curricular_id');
				if ($cursada->extra !== $extra) {
					$consulta = $this->cursada_model->consulta($extra, $espacio_curricular_id);
					if (!empty($consulta)) {
						$errors = "Esta cursada ya fue cargada";
						$this->session->set_flashdata('error', $errors);
						redirect("cursada/listar/$division->id", 'refresh');
					}
				}
				$trans_ok = TRUE;
				$trans_ok &= $this->cursada_model->update(array(
					'id' => $this->input->post('id'),
					'carga_horaria' => $this->input->post('carga_horaria'),
					'optativo' => $this->input->post('optativo'),
					'extra' => $extra
				));
				if ($trans_ok) {
					$this->session->set_flashdata('message', $this->cursada_model->get_msg());
					redirect("cursada/listar/$division->id", 'refresh');
				} else {
					$this->session->set_flashdata('error', $this->cursada_model->get_error());
					redirect("cursada/listar/$division->id", 'refresh');
				}
			} else {
				$this->session->set_flashdata('error', validation_errors());
				redirect("cursada/listar/$division->id", 'refresh');
			}
		}

		$data['fields'] = $this->build_fields($this->cursada_model->fields, $cursada);
		$data['message'] = $this->session->flashdata('message');
		$data['error'] = $this->session->flashdata('error');
		$data['cursada'] = $cursada;
		$data['escuela'] = $escuela;
		$data['division'] = $division;
		$data['txt_btn'] = 'Editar';
		$data['class'] = array('agregar' => '', 'ver' => '', 'editar' => 'active btn-app-zetta-active', 'eliminar' => '');
		$data['title'] = TITLE . ' - Editar cursada';
		$this->load->view('cursada/cursada_modal_abm', $data);
	}

	public function modal_eliminar($id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $id == NULL || !ctype_digit($id)) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		if ($this->edicion === FALSE) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		$cursada = $this->cursada_model->get_one($id);
		if (empty($cursada)) {
			return $this->modal_error('No se encontró el registro a eliminar', 'Registro no encontrado');
		}
		$division = $this->division_model->get_one($cursada->division_id);
		if (empty($division) || !empty($division->fecha_baja)) {
			return $this->modal_error('No se encontró el registro de la división', 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			return $this->modal_error('No se encontró el registro de la escuela', 'Registro no encontrado');
		}
		if (!$this->usuarios_model->verificar_permiso('escuela', $this->rol, $escuela)) {
			return $this->modal_error('No tiene permisos para acceder a la escuela', 'Acción no autorizada');
		}
		
		$cargos_cursada = $this->cargo_cursada_model->get(array(
			'select' => array('cargo_cursada.id'),
			'join' => array(
				array('cursada', "cargo_cursada.cursada_id = cursada.id AND cargo_cursada.cursada_id = $cursada->id"),
			),
		));
		
		if (isset($_POST) && !empty($_POST)) {
			if ($id !== $this->input->post('id')) {
				show_error('Esta solicitud no pasó el control de seguridad.');
			}
			$this->db->trans_begin();
			$trans_ok = TRUE;
			if (!empty($cargos_cursada)) {
				foreach ($cargos_cursada as $cargo_cursada) {
					$trans_ok &= $this->cargo_cursada_model->delete(array('id' => $cargo_cursada->id), FALSE);
				}
			}
			$trans_ok &= $this->cursada_model->delete(array('id' => $this->input->post('id')), FALSE);
			if ($this->db->trans_status() && $trans_ok) {
				$this->db->trans_commit();
				$this->session->set_flashdata('message', $this->cursada_model->get_msg());
				redirect("cursada/listar/$division->id", 'refresh');
			} else {
				$this->db->trans_rollback();
				$this->session->set_flashdata('error', $this->cursada_model->get_error());
				if (!empty($cursada->cargo_cursada)) {
					$this->session->set_flashdata('error', $this->cargo_cursada_model->get_error());
				}
				redirect("cursada/listar/$division->id", 'refresh');
			}
		}
		$data['error'] = (validation_errors() ? validation_errors() : ($this->cursada_model->get_error() ? $this->cursada_model->get_error() : $this->session->flashdata('error')));

		$data['fields'] = $this->build_fields($this->cursada_model->fields, $cursada, TRUE);
		$data['cursada'] = $cursada;
		$data['escuela'] = $escuela;
		$data['division'] = $division;
		$data['txt_btn'] = 'Eliminar';
		$data['class'] = array('agregar' => '', 'ver' => '', 'editar' => '', 'eliminar' => 'active btn-app-zetta-active');
		$data['title'] = TITLE . ' - Eliminar cursada';
		$this->load->view('cursada/cursada_modal_abm', $data);
	}

	public function modal_ver($id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $id == NULL || !ctype_digit($id)) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		$cursada = $this->cursada_model->get_one($id);
		if (empty($cursada)) {
			return $this->modal_error('No se encontró el registro a ver', 'Registro no encontrado');
		}
		$division = $this->division_model->get_one($cursada->division_id);
		if (empty($division) || !empty($division->fecha_baja)) {
			return $this->modal_error('No se encontró el registro de la división', 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			return $this->modal_error('No se encontró el registro de la escuela', 'Registro no encontrado');
		}
		if (!$this->usuarios_model->verificar_permiso('escuela', $this->rol, $escuela)) {
			return $this->modal_error('No tiene permisos para acceder a la escuela', 'Acción no autorizada');
		}

		$data['error'] = $this->session->flashdata('error');
		$data['fields'] = $this->build_fields($this->cursada_model->fields, $cursada, TRUE);
		$data['escuela'] = $escuela;
		$data['division'] = $division;
		$data['cursada'] = $cursada;
		$data['txt_btn'] = NULL;
		$data['class'] = array('agregar' => '', 'ver' => 'active btn-app-zetta-active', 'editar' => '', 'eliminar' => '');
		$data['title'] = TITLE . ' - Ver cursada';
		$this->load->view('cursada/cursada_modal_abm', $data);
	}

	public function modal_agregar_cargo($id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $id == NULL || !ctype_digit($id)) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		if ($this->edicion === FALSE) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		$cursada = $this->cursada_model->get_one($id);
		if (empty($cursada)) {
			return $this->modal_error('No se encontró el registro a ver', 'Registro no encontrado');
		}
		$division = $this->division_model->get_one($cursada->division_id);
		if (empty($division) || !empty($division->fecha_baja)) {
			return $this->modal_error('No se encontró el registro de la división', 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			return $this->modal_error('No se encontró el registro de la escuela', 'Registro no encontrado');
		}
		if (!$this->usuarios_model->verificar_permiso('escuela', $this->rol, $escuela)) {
			return $this->modal_error('No tiene permisos para acceder a la escuela', 'Acción no autorizada');
		}

		unset($this->cargo_cursada_model->fields['espacio_curricular']);
		unset($this->cargo_cursada_model->fields['persona']);
		$this->set_model_validation_rules($this->cargo_cursada_model);
		if (isset($_POST) && !empty($_POST)) {
			if ($cursada->id !== $this->input->post('cursada_id')) {
				show_error('Esta solicitud no pasó el control de seguridad.', 500, 'Acción no autorizada');
			}
			if ($this->form_validation->run() === TRUE) {
				$this->db->trans_begin();
				$cargo = $this->input->post('cargo_id');
				$trans_ok = TRUE;
				$trans_ok &= $this->cargo_cursada_model->create(array(
					'cargo_id' => $cargo,
					'carga_horaria' => $cursada->carga_horaria - ($cursada->carga_horaria_cargos),
					'cursada_id' => $cursada->id)
				);
				if ($trans_ok) {
					$this->db->trans_commit();
					$this->session->set_flashdata('message', $this->cargo_cursada_model->get_msg());
					redirect("cursada/listar/$division->id", 'refresh');
				} else {
					$this->db->trans_rollback();
					$this->session->set_flashdata('error', $this->cargo_cursada_model->get_error());
					redirect("cursada/listar/$division->id", 'refresh');
				}
			} else {
				$this->session->set_flashdata('error', validation_errors());
				redirect("cursada/listar/$division->id", 'refresh');
			}
		}

		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['escuela'] = $escuela;
		$data['division'] = $division;
		$data['cursada'] = $cursada;
		$data['cargos'] = $this->cargo_cursada_model->buscar_cargos_escuela($escuela->id, $cursada->id);
		$data['title'] = TITLE . ' - Agregar cargos a cursada';
		$this->load->view('cursada/cursada_modal_abm_cargos', $data);
	}

	public function modal_editar_cargo($id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $id == NULL || !ctype_digit($id)) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		if ($this->edicion === FALSE) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		$cargo_cursada = $this->cargo_cursada_model->get_one($id);
		if (empty($cargo_cursada)) {
			return $this->modal_error('No se encontró el registro a ver', 'Registro no encontrado');
		}
		$cursada = $this->cursada_model->get_one($cargo_cursada->cursada_id);
		if (empty($cursada)) {
			return $this->modal_error('No se encontró el registro a ver', 'Registro no encontrado');
		}
		$division = $this->division_model->get_one($cursada->division_id);
		if (empty($division) || !empty($division->fecha_baja)) {
			return $this->modal_error('No se encontró el registro de la división', 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			return $this->modal_error('No se encontró el registro de la escuela', 'Registro no encontrado');
		}
		if (!$this->usuarios_model->verificar_permiso('escuela', $this->rol, $escuela)) {
			return $this->modal_error('No tiene permisos para acceder a la escuela', 'Acción no autorizada');
		}

		$this->cargo_cursada_model->fields['carga_horaria']['max'] = $cursada->carga_horaria - ($cursada->carga_horaria_cargos - $cargo_cursada->carga_horaria);
		$this->cargo_cursada_model->fields['carga_horaria']['min'] = 1;

		$this->set_model_validation_rules($this->cargo_cursada_model);
		if (isset($_POST) && !empty($_POST)) {
			if ($cargo_cursada->id !== $this->input->post('cargo_cursada_id')) {
				show_error('Esta solicitud no pasó el control de seguridad.', 500, 'Acción no autorizada');
			}
			if ($this->form_validation->run() === TRUE) {
				$this->db->trans_begin();
				$carga_horaria = $this->input->post('carga_horaria');
				$trans_ok = TRUE;
				$trans_ok &= $this->cargo_cursada_model->update(array(
					'id' => $cargo_cursada->id,
					'carga_horaria' => $carga_horaria
					), FALSE);
				if ($trans_ok) {
					$this->db->trans_commit();
					$this->session->set_flashdata('message', $this->cargo_cursada_model->get_msg());
					redirect("cursada/listar/$division->id", 'refresh');
				} else {
					$this->db->trans_rollback();
					$this->session->set_flashdata('error', $this->cargo_cursada_model->get_error());
					redirect("cursada/listar/$division->id", 'refresh');
				}
			} else {
				$this->session->set_flashdata('error', validation_errors());
				redirect("cursada/listar/$division->id", 'refresh');
			}
		}
		$data['cargo_cursada'] = $cargo_cursada;
		$data['fields'] = $this->build_fields($this->cargo_cursada_model->fields, $cargo_cursada, FALSE);
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['escuela'] = $escuela;
		$data['division'] = $division;
		$data['cursada'] = $cursada;
		$data['txt_btn'] = 'Editar';
		$data['title'] = TITLE . ' - Editar cargo de ' . $cursada->espacio_curricular;
		$this->load->view('cursada/cursada_modal_editar_cargo', $data);
	}

	public function modal_eliminar_cargo($id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $id == NULL || !ctype_digit($id)) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		if ($this->edicion === FALSE) {
			return $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
		}
		$cargo_cursada = $this->cargo_cursada_model->get_one($id);
		if (empty($cargo_cursada)) {
			return $this->modal_error('No se encontró el registro a ver', 'Registro no encontrado');
		}
		$cursada = $this->cursada_model->get_one($cargo_cursada->cursada_id);
		if (empty($cursada)) {
			return $this->modal_error('No se encontró el registro a ver', 'Registro no encontrado');
		}
		$division = $this->division_model->get_one($cursada->division_id);
		if (empty($division) || !empty($division->fecha_baja)) {
			return $this->modal_error('No se encontró el registro de la división', 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			return $this->modal_error('No se encontró el registro de la escuela', 'Registro no encontrado');
		}
		if (!$this->usuarios_model->verificar_permiso('escuela', $this->rol, $escuela)) {
			return $this->modal_error('No tiene permisos para acceder a la escuela', 'Acción no autorizada');
		}

		$this->set_model_validation_rules($this->cargo_cursada_model);
		if (isset($_POST) && !empty($_POST)) {
			if ($cargo_cursada->id !== $this->input->post('cargo_cursada_id')) {
				show_error('Esta solicitud no pasó el control de seguridad.', 500, 'Acción no autorizada');
			}
			if ($this->form_validation->run() === TRUE) {
				$this->db->trans_begin();
				$cargo_cursada_id = $this->input->post('cargo_cursada_id');
				$trans_ok = TRUE;
				$trans_ok &= $this->cargo_cursada_model->delete(array('id' => $cargo_cursada_id), FALSE);
				if ($trans_ok) {
					$this->db->trans_commit();
					$this->session->set_flashdata('message', $this->cargo_cursada_model->get_msg());
					redirect("cursada/listar/$division->id", 'refresh');
				} else {
					$this->db->trans_rollback();
					$this->session->set_flashdata('error', $this->cargo_cursada_model->get_error());
					redirect("cursada/listar/$division->id", 'refresh');
				}
			} else {
				$this->session->set_flashdata('error', validation_errors());
				redirect("cursada/listar/$division->id", 'refresh');
			}
		}

		$data['cargo_cursada'] = $cargo_cursada;
		$data['fields'] = $this->build_fields($this->cargo_cursada_model->fields, $cargo_cursada, TRUE);
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['escuela'] = $escuela;
		$data['division'] = $division;
		$data['cursada'] = $cursada;
		$data['txt_btn'] = 'Eliminar';
		$data['title'] = TITLE . ' - Eliminar cargo de' . $cursada->espacio_curricular;
		$this->load->view('cursada/cursada_modal_editar_cargo', $data);
	}
}
/* End of file Cursada.php */
/* Location: ./application/controllers/Cursada.php */