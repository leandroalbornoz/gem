<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Escuela extends MY_Controller {

	function __construct() {
		parent::__construct();
		$this->roles_permitidos = array(ROL_JUNTAS, ROL_MODULO);
		$this->nav_route = 'par/persona';
		$this->modulos_permitidos = array(ROL_MODULO_ADMINISTRADOR_DE_JUNTAS);
	}

	//DESHABILITADO 
	/*
	  function modal_editar_vacantes($id) {
	  if (!accion_permitida($this->rol, $this->roles_permitidos, $this->modulos_permitidos) || $id == NULL || !ctype_digit($id)) {
	  $this->modal_error('No tiene permisos para la acción solicitada', 'Acción no autorizada');
	  return;
	  }

	  $DB1 = $this->load->database('bono_secundario', TRUE);
	  $this->load->model('bono_secundario/escuela_model');
	  $this->escuela_model->set_database($DB1);
	  $escuela = $this->escuela_model->get_one($id);

	  if (empty($escuela)) {
	  redirect('juntas/alertas/listar_vacantes', 'refresh');
	  }

	  $model_escuela = new stdClass();
	  $model_escuela->fields = array(
	  'escuela' => array('label' => 'Escuela', 'readonly' => 'TRUE'),
	  'vacantes' => array('label' => 'Vacantes', 'readonly' => 'TRUE'),
	  'vacantes_disponibles' => array('label' => 'Vacantes disponibles', 'required' => TRUE));

	  $this->set_model_validation_rules($model_escuela);
	  if (isset($_POST) && !empty($_POST)) {
	  if ($this->input->post('id') !== $id) {
	  $this->session->set_flashdata('error', 'Error al intentar editar vacantes de escuela');
	  redirect('juntas/alertas/listar_vacantes', 'refresh');
	  }
	  if ($this->form_validation->run() === TRUE) {
	  $trans_ok = TRUE;
	  $this->escuela_model->set_database($DB1);
	  $trans_ok &= $this->escuela_model->update(array(
	  'id' => $id,
	  'vacantes_disponibles' => $this->input->post('vacantes_disponibles')
	  ));

	  if ($trans_ok) {
	  $this->session->set_flashdata('message', $this->escuela_model->get_msg());
	  } else {
	  $this->session->set_flashdata('error', $this->escuela_model->get_error());
	  }
	  } else {
	  $this->session->set_flashdata('error', validation_errors());
	  }
	  redirect('juntas/alertas/listar_vacantes', 'refresh');
	  }
	  $model_escuela->fields['escuela']['value'] = "$escuela->numero - $escuela->nombre";
	  $model_escuela->fields['vacantes']['value'] = $escuela->vacantes;
	  $model_escuela->fields['vacantes_disponibles']['value'] = $escuela->vacantes_disponibles;
	  $data['fields'] = $this->build_fields($model_escuela->fields);
	  $data['escuela'] = $escuela;
	  $data['txt_btn'] = 'Editar';
	  $data['title'] = 'Editar escuela';
	  $this->load->view('juntas/escuela/escuela_modal_vacantes', $data);
	  }
	 */

	public function listar_validadores($escuela_id = NULL) {
		if (!accion_permitida($this->rol, $this->roles_permitidos, $this->modulos_permitidos) || $escuela_id == NULL || !ctype_digit($escuela_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$tableData = array(
			'columns' => array(
				array('label' => 'Usuario', 'data' => 'usuario', 'width' => 20),
				array('label' => 'CUIL', 'data' => 'cuil', 'width' => 10),
				array('label' => 'Persona', 'data' => 'persona', 'width' => 25),
				array('label' => 'Rol', 'data' => 'rol', 'width' => 10),
				array('label' => 'Entidad', 'data' => 'entidad', 'width' => 25),
				array('label' => 'Activo', 'data' => 'active', 'width' => 5),
				array('label' => '', 'data' => '', 'width' => 5, 'class' => 'dt-body-center', 'responsive_class' => 'all', 'sortable' => 'false', 'searchable' => 'false')
			),
			'order' => array(array(2, 'asc')),
			'table_id' => 'validadores_table',
			'source_url' => "juntas/escuela/listar_data_validadores/$escuela_id",
			'reuse_var' => TRUE,
			'initComplete' => "complete_validadores_table",
			'footer' => TRUE,
			'dom' => '<"row"<"col-sm-4"l><"col-sm-8"p>>rt<"row"<"col-sm-4"i><"col-sm-8"p>>'
		);
		$data['html_table'] = buildHTML($tableData);
		$data['js_table'] = buildJS($tableData);
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['title'] = 'Bono Secundario - Validadores';
		$this->load_template('juntas/escuela/validadores_ver', $data);
	}

	public function listar_data_validadores($escuela_id = NULL) {
		if (!accion_permitida($this->rol, $this->roles_permitidos, $this->modulos_permitidos)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$this->datatables
			->select('usuario.id, usuario.usuario, persona.cuil as cuil, CONCAT(persona.apellido, \', \', persona.nombre) as persona, rol.nombre as rol, entidad.nombre as entidad, (CASE usuario.active WHEN 1 THEN "Activo" ELSE "No Activo" END) as active')
			->unset_column('id')
			->from('usuario')
			->join('usuario_persona', 'usuario_persona.usuario_id=usuario.id')
			->join('usuario_rol', 'usuario_rol.usuario_id=usuario.id', 'left')
			->join('rol', 'usuario_rol.rol_id=rol.id', 'left')
			->join('entidad_tipo', 'rol.entidad_tipo_id=entidad_tipo.id', 'left')
			->join('entidad', 'entidad.tabla=entidad_tipo.tabla and entidad.id=usuario_rol.entidad_id', 'left')
			->join('persona', "persona.cuil = usuario_persona.cuil", 'left')
			->where('usuario.active', 1)
			->where("rol.id = '20' AND usuario_rol.entidad_id = {$escuela_id}")
			->group_by('usuario.id')
			->add_column('', '', 'id');
		echo $this->datatables->generate();
	}

	function listar_validadas($escuela_id = NULL) {
		if (!accion_permitida($this->rol, $this->roles_permitidos, $this->modulos_permitidos) || $escuela_id == NULL || !ctype_digit($escuela_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$DB1 = $this->load->database('bono_secundario', TRUE);
		$this->load->model('bono_secundario/escuela_model');
		$this->escuela_model->set_database($DB1);
		$escuela = $this->escuela_model->get(array('gem_id' => $escuela_id));
		$tableData = array(
			'columns' => array(
				array('label' => 'N° Trámite', 'data' => 'id', 'class' => 'dt-body-right', 'width' => 5),
				array('label' => 'Escuela', 'data' => 'escuela', 'width' => 13),
				array('label' => 'CUIL', 'data' => 'cuil', 'width' => 10),
				array('label' => 'Nombre', 'data' => 'persona', 'width' => 11),
				array('label' => 'Email', 'data' => 'email', 'width' => 10),
				array('label' => 'Fecha Inscripción', 'data' => 'fecha_inscripcion', 'render' => 'date', 'width' => 10),
				array('label' => 'Fecha Recepción', 'data' => 'fecha_recepcion', 'render' => 'date', 'width' => 10),
				array('label' => '', 'data' => 'edit', 'width' => 5, 'class' => 'dt-body-center', 'responsive_class' => 'all', 'sortable' => 'false', 'searchable' => 'false')
			),
			'table_id' => 'persona_table',
			'source_url' => "juntas/escuela/listar_data_validados/{$escuela[0]->id}",
			'reuse_var' => TRUE,
			'initComplete' => "complete_persona_table",
			'footer' => TRUE,
			'dom' => '<"row"<"col-sm-4"l><"col-sm-8"p>>rt<"row"<"col-sm-4"i><"col-sm-8"p>>'
		);

		$data['escuela'] = $escuela[0];
		$data['html_table'] = buildHTML($tableData);
		$data['js_table'] = buildJS($tableData);
		$data['error'] = $this->session->flashdata('error');
		$data['class'] = array('pendientes' => '', 'recibidos' => 'active btn-app-zetta-active', 'escuelas' => '', 'reclamos' => '');
		$data['message'] = $this->session->flashdata('message');
		$data['title'] = 'Bono Secundario - Personas';
		$this->load_template('juntas/escuela/validados_listar', $data);
	}

	public function listar_data_validados($escuela_id = NULL) {
		if (!accion_permitida($this->rol, $this->roles_permitidos, $this->modulos_permitidos) || $escuela_id == NULL || !ctype_digit($escuela_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$this->datatables->set_database('bono_secundario');
		$this->datatables
			->select('inscripcion.id, CONCAT(escuela.numero, \' - \', escuela.nombre) as escuela, persona.cuil, CONCAT(persona.apellido, \', \', persona.nombre) as persona, CONCAT(persona.calle, \' \', persona.calle_numero, \' \', persona.piso) as domicilio, CONCAT(persona.telefono_fijo, \' \', persona.telefono_movil) as telefonos, persona.email, inscripcion.fecha_cierre as fecha_inscripcion, inscripcion.fecha_recepcion')
			->unset_column('id')
			->from('inscripcion')
			->join('persona', 'inscripcion.persona_id = persona.id')
			->join('escuela', 'escuela.id = inscripcion.escuela_id', 'left')
			->where("inscripcion.fecha_recepcion IS NOT NULL AND inscripcion.escuela_id = $escuela_id AND inscripcion.fecha_reclamo IS NULL")
			->add_column('edit', '<a href="juntas/inscripcion/inscripcion_ver/$1" title="Ver"><i class="fa fa-download"></i></a>', 'id');
		echo $this->datatables->generate();
	}

	function listar_pendientes($escuela_id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $escuela_id == NULL || !ctype_digit($escuela_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$DB1 = $this->load->database('bono_secundario', TRUE);
		$this->load->model('bono_secundario/escuela_model');
		$this->escuela_model->set_database($DB1);
		$escuela = $this->escuela_model->get(array('gem_id' => $escuela_id));

		$tableData = array(
			'columns' => array(
				array('label' => 'N° Trámite', 'data' => 'id', 'class' => 'dt-body-right', 'width' => 5),
				array('label' => 'Escuela', 'data' => 'escuela', 'width' => 13),
				array('label' => 'CUIL', 'data' => 'cuil', 'width' => 7),
				array('label' => 'Nombre', 'data' => 'persona', 'width' => 14),
				array('label' => 'Domicilio', 'data' => 'domicilio', 'width' => 13),
				array('label' => 'Teléfonos', 'data' => 'telefonos', 'width' => 10),
				array('label' => 'Email', 'data' => 'email', 'width' => 10),
				array('label' => 'Fecha Inscripción', 'data' => 'fecha_inscripcion', 'render' => 'date', 'width' => 8),
				array('label' => 'Fecha Recepción', 'data' => 'fecha_recepcion', 'render' => 'date', 'width' => 8),
				array('label' => '', 'data' => 'edit', 'width' => 5, 'class' => 'dt-body-center', 'responsive_class' => 'all', 'sortable' => 'false', 'searchable' => 'false')
			),
			'table_id' => 'persona_table',
			'source_url' => "juntas/escuela/listar_data_precepcion/{$escuela[0]->id}",
			'reuse_var' => TRUE,
			'initComplete' => "complete_persona_table",
			'footer' => TRUE,
			'dom' => '<"row"<"col-sm-4"l><"col-sm-8"p>>rt<"row"<"col-sm-4"i><"col-sm-8"p>>'
		);

		$data['escuela'] = $escuela[0];
		$data['html_table'] = buildHTML($tableData);
		$data['js_table'] = buildJS($tableData);
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['message'] = $this->session->flashdata('message');
		$data['title'] = 'Bono Secundario - Personas';
		$this->load_template('juntas/escuela/pvalidacion_listar', $data);
	}

	public function listar_data_precepcion($escuela_id = NULL) {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) || $escuela_id == NULL || !ctype_digit($escuela_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$this->datatables->set_database('bono_secundario');
		$this->datatables
			->select("inscripcion.id, CONCAT(escuela.numero, ' - ', escuela.nombre) as escuela, persona.cuil, CONCAT(persona.apellido, ', ', persona.nombre) as persona, CONCAT(persona.calle, ' ', persona.calle_numero, ' ', persona.piso) as domicilio, CONCAT(persona.telefono_fijo, ' ', persona.telefono_movil) as telefonos, persona.email, inscripcion.fecha_cierre as fecha_inscripcion, inscripcion.fecha_recepcion")
			->unset_column('id')
			->from('inscripcion')
			->join('persona', 'inscripcion.persona_id = persona.id', 'left')
			->join('escuela', 'escuela.id = inscripcion.escuela_id', 'left')
			->where("inscripcion.fecha_recepcion is NULL AND inscripcion.fecha_cierre IS NOT NULL AND inscripcion.escuela_id = $escuela_id AND inscripcion.fecha_reclamo is NULL")
			->add_column('edit', '<a href="juntas/inscripcion/inscripcion_ver/$1" title="Ver"><i class="fa fa-download"></i></a>', 'id');
		echo $this->datatables->generate();
	}
}