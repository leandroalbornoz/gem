<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Evaluar_operativo extends MY_Controller {

	function __construct() {
		parent::__construct();
		$this->load->model('evaluar_operativo_model');
		$this->load->model('escuela_model');
		$this->load->model('division_model');
		$this->roles_permitidos = array(ROL_ADMIN, ROL_USI, ROL_MODULO);
		$this->modulos_permitidos = array(ROL_MODULO_LEER_ESCRIBIR);
		$this->nav_route = 'par/evaluar_operativo';
	}

	public function listar_escuelas() {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) &&
			($this->rol->codigo !== ROL_MODULO || !in_array($this->rol->entidad_id, $this->modulos_permitidos))) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$tableData = array(
			'columns' => array(
				array('label' => 'Número', 'data' => 'numero', 'width' => 5),
				array('label' => 'Anexo', 'data' => 'anexo', 'class' => 'dt-body-right', 'width' => 5),
				array('label' => 'CUE', 'data' => 'cue', 'class' => 'dt-body-right', 'width' => 5),
				array('label' => 'Nombre', 'data' => 'nombre', 'width' => 20),
				array('label' => 'Nivel', 'data' => 'nivel', 'width' => 7, 'class' => 'text-sm'),
				array('label' => 'Juri/Repa', 'data' => 'jurirepa', 'width' => 5, 'class' => 'text-sm'),
				array('label' => 'Supervisión', 'data' => 'supervision', 'width' => 10, 'class' => 'text-sm'),
				array('label' => 'Regional', 'data' => 'regional', 'width' => 8, 'class' => 'text-sm'),
				array('label' => 'Zona', 'data' => 'zona', 'width' => 5, 'class' => 'text-sm'),
				array('label' => 'Teléfono', 'data' => 'telefono', 'width' => 10, 'responsive_class' => 'none'),
				array('label' => 'Email', 'data' => 'email', 'width' => 10, 'responsive_class' => 'none'),
				array('label' => '', 'data' => 'edit', 'width' => 10, 'class' => 'dt-body-center', 'responsive_class' => 'all', 'sortable' => 'false', 'searchable' => 'false')
			),
			'table_id' => 'escuela_table',
			'source_url' => "operativo_evaluar/evaluar_operativo/listar_data_escuelas/{$this->rol->codigo}/{$this->rol->entidad_id}",
			'reuse_var' => TRUE,
			'initComplete' => "complete_escuela_table",
			'footer' => TRUE,
			'dom' => '<"row"<"col-sm-4"l><"col-sm-8"p>>rt<"row"<"col-sm-4"i><"col-sm-8"p>>'
		);


		$data['html_table'] = buildHTML($tableData);
		$data['js_table'] = buildJS($tableData);
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$this->load->model('nivel_model');
		$nivel = $this->nivel_model->get(array('id' => 2));
		$data['nivel'] = $nivel;
		$data['title'] = TITLE . ' - Escuelas Nivel ' . $nivel->descripcion;
		$this->load_template('escuela/escuela_listar', $data);
	}

	public function listar_data_escuelas($rol_codigo, $entidad_id = '') {
		if (!in_array($this->rol->codigo, $this->roles_permitidos) &&
			($this->rol->codigo !== ROL_MODULO || !in_array($this->rol->entidad_id, $this->modulos_permitidos))) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		if ($rol_codigo !== $this->rol->codigo || ((!empty($this->rol->entidad_id) || !empty($entidad_id)) && $this->rol->entidad_id !== $entidad_id)) {
			show_error('Ha cambiado su rol, por favor refresque la página', 500, 'Acción no autorizada');
		}
		$this->datatables
			->select('escuela.id, escuela.numero, escuela.anexo, escuela.cue, escuela.subcue, escuela.nombre, escuela.calle, escuela.calle_numero, escuela.departamento, escuela.piso, escuela.barrio, escuela.manzana, escuela.casa, escuela.localidad_id, escuela.nivel_id, escuela.reparticion_id, escuela.supervision_id, escuela.regional_id, escuela.dependencia_id, escuela.zona_id, escuela.fecha_creacion, escuela.anio_resolucion, escuela.numero_resolucion, escuela.telefono, escuela.email, escuela.fecha_cierre, escuela.anio_resolucion_cierre, escuela.numero_resolucion_cierre, dependencia.descripcion as dependencia, nivel.descripcion as nivel, regional.descripcion as regional, CONCAT(jurisdiccion.codigo,\'/\',reparticion.codigo) as jurirepa, supervision.nombre as supervision, zona.descripcion as zona')
			->unset_column('id')
			->from('escuela')
			->join('dependencia', 'dependencia.id = escuela.dependencia_id', 'left')
			->join('nivel', 'nivel.id = escuela.nivel_id', 'left')
			->join('regional', 'regional.id = escuela.regional_id', 'left')
			->join('reparticion', 'reparticion.id = escuela.reparticion_id', 'left')
			->join('jurisdiccion', 'jurisdiccion.id = reparticion.jurisdiccion_id', 'left')
			->join('supervision', 'supervision.id = escuela.supervision_id', 'left')
			->join('zona', 'zona.id = escuela.zona_id', 'left')
			->where('nivel.id', 2);
		$this->datatables->add_column('edit', '<a class="btn btn-xs btn-default" href="operativo_evaluar/evaluar_operativo/listar_divisiones/$1" title="Ver"><i class="fa fa-search"></i> Ver</a>', 'id');

		echo $this->datatables->generate();
	}

	public function listar_divisiones($escuela_id = NULL) {
		if ((!in_array($this->rol->codigo, $this->roles_permitidos) &&
			($this->rol->codigo !== ROL_MODULO || !in_array($this->rol->entidad_id, $this->modulos_permitidos))
			) || $escuela_id == NULL || !ctype_digit($escuela_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$escuela = $this->escuela_model->get_one($escuela_id);
		if (empty($escuela)) {
			show_error('No se encontró el registro de escuela', 500, 'Registro no encontrado');
		}
		$divisiones = $this->evaluar_operativo_model->get_divisiones($escuela_id);
		$data['divisiones'] = $divisiones;
		$data['escuela'] = $escuela;
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['title'] = TITLE . ' - Divisiones';
		$this->load_template('operativo_evaluar/evaluar_operativo/evaluar_operativo_listar_divisiones', $data);
	}

	public function listar_alumnos($division_id = NULL) {
		if ((!in_array($this->rol->codigo, $this->roles_permitidos) &&
			($this->rol->codigo !== ROL_MODULO || !in_array($this->rol->entidad_id, $this->modulos_permitidos))
			) || $division_id == NULL || !ctype_digit($division_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$division = $this->division_model->get_one($division_id);
		if (empty($division)) {
			show_error('No se encontró el registro de division', 500, 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			show_error('No se encontró el registro de escuela', 500, 'Registro no encontrado');
		}

		$ciclo_lectivo = 2017;
		$alumnos_division = $this->evaluar_operativo_model->get_alumnos_division($division->id, $ciclo_lectivo);
		$data['alumnos_division'] = $alumnos_division;
		$data['escuela'] = $escuela;
		$data['division'] = $division;
		$data['error'] = $this->session->flashdata('error');
		$data['message'] = $this->session->flashdata('message');
		$data['title'] = TITLE . ' - Divisiones';
		$this->load_template('operativo_evaluar/evaluar_operativo/evaluar_operativo_listar_alumnos', $data);
	}

	public function agregar($alumno_division_id = NULL) {
		if ((!in_array($this->rol->codigo, $this->roles_permitidos) &&
			($this->rol->codigo !== ROL_MODULO || !in_array($this->rol->entidad_id, $this->modulos_permitidos))
			) || $alumno_division_id == NULL || !ctype_digit($alumno_division_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}

		$this->load->model('alumno_model');
		$this->load->model('alumno_division_model');
		$alumno_division = $this->alumno_division_model->get_one($alumno_division_id);
		if (empty($alumno_division)) {
			show_error('No se encontró el registro de alumno', 500, 'Registro no encontrado');
		}
		$alumno = $this->alumno_model->get_one($alumno_division->alumno_id);
		if (empty($alumno)) {
			show_error('No se encontró el registro de alumno', 500, 'Registro no encontrado');
		}
		$division = $this->division_model->get_one($alumno_division->division_id);
		if (empty($division)) {
			show_error('No se encontró el registro de division', 500, 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			show_error('No se encontró el registro de escuela', 500, 'Registro no encontrado');
		}

		$this->array_puntuacion_1_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_2_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_3_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_4_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_5_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_6a_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_6b_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_7_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_8_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_9_control = array('0' => 0, '1' => 1, '2' => 2);
		$this->array_puntuacion_10a_control = array('0' => 0, '1' => 1, '2' => 2, '3' => 3);
		$this->array_puntuacion_10b_control = array('0' => 0, '1' => 1, '2' => 2, '3' => 3, '4' => 4);
		$this->array_puntuacion_11a_control = array('0' => 0, '1' => 1, '2' => 2);
		$this->array_puntuacion_11b_control = array('0' => 0, '1' => 1, '2' => 2, '3' => 3);
		$this->array_puntuacion_11c_control = array('0' => 0, '1' => 1, '2' => 2);
		$this->form_validation->set_rules("puntuacion_1", 'Puntuacion_1', 'callback_control_combo[puntuacion_1]');
		$this->form_validation->set_rules("puntuacion_2", 'Puntuacion_2', 'callback_control_combo[puntuacion_2]');
		$this->form_validation->set_rules("puntuacion_3", 'Puntuacion_3', 'callback_control_combo[puntuacion_3]');
		$this->form_validation->set_rules("puntuacion_4", 'Puntuacion_4', 'callback_control_combo[puntuacion_4]');
		$this->form_validation->set_rules("puntuacion_5", 'Puntuacion_5', 'callback_control_combo[puntuacion_5]');
		$this->form_validation->set_rules("puntuacion_6a", 'Puntuacion_6a', 'callback_control_combo[puntuacion_6a]');
		$this->form_validation->set_rules("puntuacion_6b", 'Puntuacion_6b', 'callback_control_combo[puntuacion_6b]');
		$this->form_validation->set_rules("puntuacion_7", 'Puntuacion_7', 'callback_control_combo[puntuacion_7]');
		$this->form_validation->set_rules("puntuacion_8", 'Puntuacion_8', 'callback_control_combo[puntuacion_8]');
		$this->form_validation->set_rules("puntuacion_9", 'Puntuacion_9', 'callback_control_combo[puntuacion_9]');
		$this->form_validation->set_rules("puntuacion_10a", 'Puntuacion_10a', 'callback_control_combo[puntuacion_10a]');
		$this->form_validation->set_rules("puntuacion_10b", 'Puntuacion_10b', 'callback_control_combo[puntuacion_10b]');
		$this->form_validation->set_rules("puntuacion_11a", 'Puntuacion_11a', 'callback_control_combo[puntuacion_11a]');
		$this->form_validation->set_rules("puntuacion_11b", 'Puntuacion_11b', 'callback_control_combo[puntuacion_11b]');
		$this->form_validation->set_rules("puntuacion_11c", 'Puntuacion_11c', 'callback_control_combo[puntuacion_11c]');

		if ($this->form_validation->run() === TRUE) {
			$trans_ok = TRUE;
			$trans_ok &= $this->evaluar_operativo_model->create(array(
				'fecha_carga' => date('Y-m-d'),
				'alumno_id' => $alumno_division->alumno_id,
				'alumno_division_id' => $alumno_division->id,
				'puntuacion_1' => $this->input->post('puntuacion_1'),
				'puntuacion_2' => $this->input->post('puntuacion_2'),
				'puntuacion_3' => $this->input->post('puntuacion_3'),
				'puntuacion_4' => $this->input->post('puntuacion_4'),
				'puntuacion_5' => $this->input->post('puntuacion_5'),
				'puntuacion_6a' => $this->input->post('puntuacion_6a'),
				'puntuacion_6b' => $this->input->post('puntuacion_6b'),
				'puntuacion_7' => $this->input->post('puntuacion_7'),
				'puntuacion_8' => $this->input->post('puntuacion_8'),
				'puntuacion_9' => $this->input->post('puntuacion_9'),
				'puntuacion_10a' => $this->input->post('puntuacion_10a'),
				'puntuacion_10b' => $this->input->post('puntuacion_10b'),
				'puntuacion_11a' => $this->input->post('puntuacion_11a'),
				'puntuacion_11b' => $this->input->post('puntuacion_11b'),
				'puntuacion_11c' => $this->input->post('puntuacion_11c')
			));

			if ($trans_ok) {
				$this->session->set_flashdata('message', $this->evaluar_operativo_model->get_msg());
				redirect('operativo_evaluar/evaluar_operativo/listar_alumnos/' . $division->id, 'refresh');
			}
		}

		$data['escuela'] = $escuela;
		$data['message'] = $this->session->flashdata('message');
		$data['error'] = (validation_errors() ? validation_errors() : ($this->evaluar_operativo_model->get_error() ? $this->evaluar_operativo_model->get_error() : $this->session->flashdata('error')));
		$data['alumno'] = $alumno;
		$data['alumno_division'] = $alumno_division;
		$data['division'] = $division;
		$data['fields'] = $this->build_fields($this->evaluar_operativo_model->fields);
		$data['txt_btn'] = 'Agregar';
		$data['class'] = array('agregar' => 'active btn-app-zetta-active', 'ver' => 'disabled', 'editar' => 'disabled', 'eliminar' => 'disabled');
		$data['title'] = TITLE . ' - Agregar evaluacion';
		$this->load_template('operativo_evaluar/evaluar_operativo/evaluar_operativo_abm_evaluacion', $data);
	}

	public function editar($evaluar_operativo_id = NULL, $alumno_division_id = NULL) {
		if ((!in_array($this->rol->codigo, $this->roles_permitidos) &&
			($this->rol->codigo !== ROL_MODULO || !in_array($this->rol->entidad_id, $this->modulos_permitidos))
			) || $alumno_division_id == NULL || !ctype_digit($alumno_division_id) || $evaluar_operativo_id == NULL || !ctype_digit($evaluar_operativo_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}

		$this->load->model('alumno_model');
		$this->load->model('alumno_division_model');
		$alumno_division = $this->alumno_division_model->get_one($alumno_division_id);
		if (empty($alumno_division)) {
			show_error('No se encontró el registro de alumno', 500, 'Registro no encontrado');
		}
		$alumno = $this->alumno_model->get_one($alumno_division->alumno_id);
		if (empty($alumno)) {
			show_error('No se encontró el registro de alumno', 500, 'Registro no encontrado');
		}
		$division = $this->division_model->get_one($alumno_division->division_id);
		if (empty($division)) {
			show_error('No se encontró el registro de division', 500, 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			show_error('No se encontró el registro de escuela', 500, 'Registro no encontrado');
		}
		$evaluar_operativo = $this->evaluar_operativo_model->get_one($evaluar_operativo_id);
		if (empty($evaluar_operativo)) {
			show_error('No se encontró el registro a editar', 500, 'Registro no encontrado');
		}

		$this->array_puntuacion_1_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_2_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_3_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_4_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_5_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_6a_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_6b_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_7_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_8_control = array('0' => 0, '1' => 1);
		$this->array_puntuacion_9_control = array('0' => 0, '1' => 1, '2' => 2);
		$this->array_puntuacion_10a_control = array('0' => 0, '1' => 1, '2' => 2, '3' => 3);
		$this->array_puntuacion_10b_control = array('0' => 0, '1' => 1, '2' => 2, '3' => 3, '4' => 4);
		$this->array_puntuacion_11a_control = array('0' => 0, '1' => 1, '2' => 2);
		$this->array_puntuacion_11b_control = array('0' => 0, '1' => 1, '2' => 2, '3' => 3);
		$this->array_puntuacion_11c_control = array('0' => 0, '1' => 1, '2' => 2);
		$this->form_validation->set_rules("puntuacion_1", 'Puntuacion_1', 'callback_control_combo[puntuacion_1]');
		$this->form_validation->set_rules("puntuacion_2", 'Puntuacion_2', 'callback_control_combo[puntuacion_2]');
		$this->form_validation->set_rules("puntuacion_3", 'Puntuacion_3', 'callback_control_combo[puntuacion_3]');
		$this->form_validation->set_rules("puntuacion_4", 'Puntuacion_4', 'callback_control_combo[puntuacion_4]');
		$this->form_validation->set_rules("puntuacion_5", 'Puntuacion_5', 'callback_control_combo[puntuacion_5]');
		$this->form_validation->set_rules("puntuacion_6a", 'Puntuacion_6a', 'callback_control_combo[puntuacion_6a]');
		$this->form_validation->set_rules("puntuacion_6b", 'Puntuacion_6b', 'callback_control_combo[puntuacion_6b]');
		$this->form_validation->set_rules("puntuacion_7", 'Puntuacion_7', 'callback_control_combo[puntuacion_7]');
		$this->form_validation->set_rules("puntuacion_8", 'Puntuacion_8', 'callback_control_combo[puntuacion_8]');
		$this->form_validation->set_rules("puntuacion_9", 'Puntuacion_9', 'callback_control_combo[puntuacion_9]');
		$this->form_validation->set_rules("puntuacion_10a", 'Puntuacion_10a', 'callback_control_combo[puntuacion_10a]');
		$this->form_validation->set_rules("puntuacion_10b", 'Puntuacion_10b', 'callback_control_combo[puntuacion_10b]');
		$this->form_validation->set_rules("puntuacion_11a", 'Puntuacion_11a', 'callback_control_combo[puntuacion_11a]');
		$this->form_validation->set_rules("puntuacion_11b", 'Puntuacion_11b', 'callback_control_combo[puntuacion_11b]');
		$this->form_validation->set_rules("puntuacion_11c", 'Puntuacion_11c', 'callback_control_combo[puntuacion_11c]');
		if (isset($_POST) && !empty($_POST)) {
			if ($evaluar_operativo->id !== $this->input->post('id')) {
				show_error('Esta solicitud no pasó el control de seguridad.');
			}
			if ($this->form_validation->run() === TRUE) {
				$trans_ok = TRUE;
				$trans_ok &= $this->evaluar_operativo_model->update(array(
					'id' => $this->input->post('id'),
					'puntuacion_1' => $this->input->post('puntuacion_1'),
					'puntuacion_2' => $this->input->post('puntuacion_2'),
					'puntuacion_3' => $this->input->post('puntuacion_3'),
					'puntuacion_4' => $this->input->post('puntuacion_4'),
					'puntuacion_5' => $this->input->post('puntuacion_5'),
					'puntuacion_6a' => $this->input->post('puntuacion_6a'),
					'puntuacion_6b' => $this->input->post('puntuacion_6b'),
					'puntuacion_7' => $this->input->post('puntuacion_7'),
					'puntuacion_8' => $this->input->post('puntuacion_8'),
					'puntuacion_9' => $this->input->post('puntuacion_9'),
					'puntuacion_10a' => $this->input->post('puntuacion_10a'),
					'puntuacion_10b' => $this->input->post('puntuacion_10b'),
					'puntuacion_11a' => $this->input->post('puntuacion_11a'),
					'puntuacion_11b' => $this->input->post('puntuacion_11b'),
					'puntuacion_11c' => $this->input->post('puntuacion_11c')
				));
				if ($trans_ok) {
					$this->session->set_flashdata('message', $this->evaluar_operativo_model->get_msg());
					redirect('operativo_evaluar/evaluar_operativo/listar_alumnos/' . $division->id, 'refresh');
				}
			}
		}

		$data['escuela'] = $escuela;
		$data['alumno_division'] = $alumno_division;
		$data['alumno'] = $alumno;
		$data['division'] = $division;
		$data['message'] = $this->session->flashdata('message');
		$data['error'] = (validation_errors() ? validation_errors() : ($this->evaluar_operativo_model->get_error() ? $this->evaluar_operativo_model->get_error() : $this->session->flashdata('error')));
		$data['fields'] = $this->build_fields($this->evaluar_operativo_model->fields, $evaluar_operativo);
		$data['evaluar_operativo'] = $evaluar_operativo;
		$data['txt_btn'] = 'Editar';
		$data['class'] = array('agregar' => '', 'ver' => '', 'editar' => 'active btn-app-zetta-active', 'eliminar' => '');
		$data['title'] = TITLE . ' - Editar evaluacion';
		$this->load_template('operativo_evaluar/evaluar_operativo/evaluar_operativo_abm_evaluacion', $data);
	}

	public function eliminar($evaluar_operativo_id = NULL, $alumno_division_id = NULL) {
		if ((!in_array($this->rol->codigo, $this->roles_permitidos) &&
			($this->rol->codigo !== ROL_MODULO || !in_array($this->rol->entidad_id, $this->modulos_permitidos))
			) || $alumno_division_id == NULL || !ctype_digit($alumno_division_id) || $evaluar_operativo_id == NULL || !ctype_digit($evaluar_operativo_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}

		$this->load->model('alumno_model');
		$this->load->model('alumno_division_model');
		$alumno_division = $this->alumno_division_model->get_one($alumno_division_id);
		if (empty($alumno_division)) {
			show_error('No se encontró el registro de alumno', 500, 'Registro no encontrado');
		}
		$alumno = $this->alumno_model->get_one($alumno_division->alumno_id);
		if (empty($alumno)) {
			show_error('No se encontró el registro de alumno', 500, 'Registro no encontrado');
		}
		$division = $this->division_model->get_one($alumno_division->division_id);
		if (empty($division)) {
			show_error('No se encontró el registro de division', 500, 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			show_error('No se encontró el registro de escuela', 500, 'Registro no encontrado');
		}
		$evaluar_operativo = $this->evaluar_operativo_model->get_one($evaluar_operativo_id);
		if (empty($evaluar_operativo)) {
			show_error('No se encontró el registro de evaluación a editar', 500, 'Registro no encontrado');
		}

		if (isset($_POST) && !empty($_POST)) {
			if ($evaluar_operativo->id !== $this->input->post('id')) {
				show_error('Esta solicitud no pasó el control de seguridad.');
			}

			$trans_ok = TRUE;
			$trans_ok &= $this->evaluar_operativo_model->delete(array('id' => $this->input->post('id')));
			if ($trans_ok) {
				$this->session->set_flashdata('message', $this->evaluar_operativo_model->get_msg());
				redirect('operativo_evaluar/evaluar_operativo/listar_alumnos/' . $division->id, 'refresh');
			}
		}

		$data['escuela'] = $escuela;
		$data['alumno_division'] = $alumno_division;
		$data['alumno'] = $alumno;
		$data['division'] = $division;
		$data['error'] = (validation_errors() ? validation_errors() : ($this->evaluar_operativo_model->get_error() ? $this->evaluar_operativo_model->get_error() : $this->session->flashdata('error')));
		$data['fields'] = $this->build_fields($this->evaluar_operativo_model->fields, $evaluar_operativo, TRUE);
		$data['evaluar_operativo'] = $evaluar_operativo;
		$data['txt_btn'] = 'Eliminar';
		$data['class'] = array('agregar' => '', 'ver' => '', 'editar' => '', 'eliminar' => 'active btn-app-zetta-active');
		$data['title'] = TITLE . ' - Eliminar evaluación';
		$this->load_template('operativo_evaluar/evaluar_operativo/evaluar_operativo_abm_evaluacion', $data);
	}

	public function ver($evaluar_operativo_id = NULL, $alumno_division_id = NULL) {
		if ((!in_array($this->rol->codigo, $this->roles_permitidos) &&
			($this->rol->codigo !== ROL_MODULO || !in_array($this->rol->entidad_id, $this->modulos_permitidos))
			) || $alumno_division_id == NULL || !ctype_digit($alumno_division_id) || $evaluar_operativo_id == NULL || !ctype_digit($evaluar_operativo_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$this->load->model('alumno_model');
		$this->load->model('alumno_division_model');
		$alumno_division = $this->alumno_division_model->get_one($alumno_division_id);
		if (empty($alumno_division)) {
			show_error('No se encontró el registro de alumno', 500, 'Registro no encontrado');
		}
		$alumno = $this->alumno_model->get_one($alumno_division->alumno_id);
		if (empty($alumno)) {
			show_error('No se encontró el registro de alumno', 500, 'Registro no encontrado');
		}
		$division = $this->division_model->get_one($alumno_division->division_id);
		if (empty($division)) {
			show_error('No se encontró el registro de division', 500, 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			show_error('No se encontró el registro de escuela', 500, 'Registro no encontrado');
		}

		$evaluar_operativo = $this->evaluar_operativo_model->get_one($evaluar_operativo_id);
		if (empty($evaluar_operativo)) {
			show_error('No se encontró el registro de evaluación a editar', 500, 'Registro no encontrado');
		}

		$data['escuela'] = $escuela;
		$data['alumno_division'] = $alumno_division;
		$data['alumno'] = $alumno;
		$data['division'] = $division;
		$data['error'] = $this->session->flashdata('error');
		$data['fields'] = $this->build_fields($this->evaluar_operativo_model->fields, $evaluar_operativo, TRUE);
		$data['evaluar_operativo'] = $evaluar_operativo;
		$data['txt_btn'] = NULL;
		$data['class'] = array('agregar' => '', 'ver' => 'active btn-app-zetta-active', 'editar' => '', 'eliminar' => '');
		$data['title'] = TITLE . ' - Ver evaluacion';
		$this->load_template('operativo_evaluar/evaluar_operativo/evaluar_operativo_abm_evaluacion', $data);
	}

	public function excel_reporte_alumnos($division_id = NULL) {
		if ((!in_array($this->rol->codigo, $this->roles_permitidos) &&
			($this->rol->codigo !== ROL_MODULO || !in_array($this->rol->entidad_id, $this->modulos_permitidos))
			) || $division_id == NULL || !ctype_digit($division_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}

		$division = $this->division_model->get_one($division_id);
		if (empty($division)) {
			show_error('No se encontró el registro de division', 500, 'Registro no encontrado');
		}
		$escuela = $this->escuela_model->get_one($division->escuela_id);
		if (empty($escuela)) {
			show_error('No se encontró el registro de escuela', 500, 'Registro no encontrado');
		}
		$ciclo_lectivo = 2017;
		
		$campos = array(
			'A' => array('Documento', 15),
			'B' => array('Persona', 35),
			'C' => array('F. Ingreso', 15),
			'D' => array('Sexo', 10),
			'E' => array('Curso', 15),
			'F' => array('División.', 15),
			'G' => array('Comprensión y producción del texto', 35),
			'H' => array('Solución de problemas', 22),
			'I' => array('Nivel de desempeño', 20)
		);

		$alumnos = $this->db->select("CONCAT(documento_tipo.descripcion_corta,' ', persona.documento) as documento, CONCAT(COALESCE(persona.apellido, ''), ', ', COALESCE(persona.nombre, '')) as persona, DATE_FORMAT(alumno_division.fecha_desde,'%d/%m/%Y'), COALESCE(CONCAT(CASE WHEN sexo.id=1 THEN 'M' WHEN sexo.id=2 THEN 'F' ELSE '' END), ' ') as sexo,  curso.descripcion as curso, CASE curso.grado_multiple WHEN 'Si' THEN CONCAT(division.division, ' (', COALESCE(c_gm.descripcion, ''), ')') ELSE division.division END as division,(eo.puntuacion_1 + eo.puntuacion_2 + eo.puntuacion_3 + eo.puntuacion_4 + eo.puntuacion_5 + eo.puntuacion_6a + eo.puntuacion_6b + eo.puntuacion_7 + eo.puntuacion_8 + eo.puntuacion_9 + eo.puntuacion_11a + eo.puntuacion_11b + eo.puntuacion_11c) as puntuacion_1,(eo.puntuacion_10a + eo.puntuacion_10b) as puntuacion_2, (((eo.puntuacion_1 + eo.puntuacion_2 + eo.puntuacion_3 + eo.puntuacion_4 + eo.puntuacion_5 + eo.puntuacion_6a + eo.puntuacion_6b + eo.puntuacion_7 + eo.puntuacion_8 + eo.puntuacion_9 + eo.puntuacion_11a + eo.puntuacion_11b + eo.puntuacion_11c) + (eo.puntuacion_10a + eo.puntuacion_10b)) * 10 / 25) as nivel_desempeño")
				->from('alumno')
				->join('persona', 'persona.id = alumno.persona_id')
				->join('sexo', 'sexo.id = persona.sexo_id', 'left')
				->join('alumno_division', 'alumno_division.alumno_id = alumno.id')
				->join('division', 'division.id = alumno_division.division_id')
				->join('documento_tipo', 'persona.documento_tipo_id = documento_tipo.id')
				->join('curso', 'division.curso_id = curso.id')
				->join('curso c_gm', 'alumno_division.curso_id = c_gm.id', 'left')
				->join('evaluar_operativo eo', 'alumno.id = eo.alumno_id', 'left')
				->where('division.id', $division_id)
				->where('alumno_division.fecha_hasta IS NULL')
				->where('ciclo_lectivo', $ciclo_lectivo)
				->get()->result_array();

		$escuela_nombre = str_replace("/", " Anexo ", "$escuela->nombre_corto");
		if (!empty($alumnos)) {
			$this->exportar_excel(array('title' => "Alumnos de $division->curso$division->division - $escuela_nombre"), $campos, $alumnos);
		} else {
			$this->session->set_flashdata('error', 'Sin datos para el reporte seleccionado');
			redirect('operativo_evaluar/evaluar_operativo/listar_alumnos/' . $division->id, 'refresh');
		}
	}
	
	public function excel_reporte_divisiones($escuela_id = NULL) {
		if ((!in_array($this->rol->codigo, $this->roles_permitidos) &&
			($this->rol->codigo !== ROL_MODULO || !in_array($this->rol->entidad_id, $this->modulos_permitidos))
			) || $escuela_id == NULL || !ctype_digit($escuela_id)) {
			show_error('No tiene permisos para la acción solicitada', 500, 'Acción no autorizada');
		}
		$escuela = $this->escuela_model->get_one($escuela_id);
		if (empty($escuela)) {
			show_error('No se encontró el registro de escuela', 500, 'Registro no encontrado');
		}
		
		$campos = array(
			'A' => array('Curso', 15),
			'B' => array('División', 10),
			'C' => array('Turno', 10),
			'D' => array('Carrera', 25),
			'E' => array('Modalidad', 15),
			'F' => array('Fecha de alta', 15),
			'G' => array('Total de Alumnos', 15),
			'H' => array('Evaluaciones Cargadas', 22),
		);

		$divisiones = $this->db->select("curso.descripcion as curso, division.division, turno.descripcion as turno, carrera.descripcion as carrera, modalidad.descripcion as modalidad, DATE_FORMAT(division.fecha_alta,'%d/%m/%Y'), COUNT(DISTINCT alumno_division.alumno_id) as total_alumnos, COUNT(DISTINCT eo.id) as total_cargados")
				->from('division')
				->join('carrera', 'carrera.id = division.carrera_id', 'left')
				->join('curso', 'curso.id = division.curso_id')
				->join('escuela', 'escuela.id = division.escuela_id')
				->join('turno', 'turno.id = division.turno_id', 'left')
				->join('modalidad', 'modalidad.id = division.modalidad_id', 'left')
				->join('alumno_division', 'alumno_division.division_id = division.id')
				->join('alumno', 'alumno_division.alumno_id = alumno.id')
				->join('evaluar_operativo eo', 'alumno.id = eo.alumno_id','left')
				->where('division.escuela_id', $escuela_id)
				->where('division.fecha_baja IS NULL')
				->where("(curso.id = 8 OR (curso.id = 71 AND division.division LIKE '%2%'))")
				->group_by('division.id')
				->get()->result_array();

		$escuela_nombre = str_replace("/", " Anexo ", "$escuela->nombre_corto");
		if (!empty($divisiones)) {
			$this->exportar_excel(array('title' => "2° grados de $escuela_nombre"), $campos, $divisiones);
		} else {
			$this->session->set_flashdata('error', 'Sin datos para el reporte seleccionado');
			redirect('operativo_evaluar/evaluar_operativo/listar_divisiones/' . $escuela->id, 'refresh');
		}
	}
}
/* End of file Evaluar_operativo.php */
/* Location: ./application/controllers/Evaluar_operativo.php */