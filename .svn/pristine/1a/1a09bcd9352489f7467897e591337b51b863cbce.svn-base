<?php

defined('BASEPATH') OR exit('No direct script access allowed');

class Persona_model extends MY_Model_DB {

	public function __construct() {
		parent::__construct();
		$this->table_name = 'persona';
		$this->msg_name = 'Persona';
		$this->id_name = 'id';
		$this->columnas = array('id', 'PerCuil', 'PerApe', 'PerNom', 'PerFecNac', 'PerSex', 'PerDomClle', 'PerDomNro', 'PerDomPiso', 'PerDomDpto', 'PerDomTel', 'PerDomTel2', 'PerDomProC', 'PerDomDepl', 'PerDomDisl', 'PerCodPos', 'PerDomEmai', 'NroDocumen', 'Estado', 'fecha_registro', 'usuario_id', 'fecha_validacion');
		$this->fields = array(
			'PerCuil' => array('label' => 'Cuil', 'maxlength' => '13', 'readonly' => TRUE),
			'PerApe' => array('label' => 'Apellido', 'maxlength' => '25'),
			'PerNom' => array('label' => 'Nombre', 'maxlength' => '25'),
			'PerFecNac' => array('label' => 'Fecha de Nacimiento (dd/mm/aaaa)', 'type' => 'date', 'placeholder' => 'dd/mm/aaaa'),
			'PerSex' => array('label' => 'Sexo', 'input_type' => 'combo', 'id_name' => 'PerSex', 'array' => array('F' => 'Femenino', 'M' => 'Masculino')),
			'PerDomClle' => array('label' => 'Calle', 'maxlength' => '60'),
			'PerDomNro' => array('label' => 'Número', 'maxlength' => '5'),
			'PerDomPiso' => array('label' => 'Piso', 'maxlength' => '2'),
			'PerDomDpto' => array('label' => 'Dpto', 'maxlength' => '5'),
			'PerDomTel' => array('label' => 'Teléfono', 'maxlength' => '20'),
			'PerDomTel2' => array('label' => 'Teléfono alternativo', 'maxlength' => '20'),
			'PerDomDepl' => array('label' => 'Departamento', 'input_type' => 'combo', 'id_name' => 'PerDomDepl'),
			'PerDomDisl' => array('label' => 'Distrito', 'input_type' => 'combo', 'id_name' => 'PerDomDisl'),
			'PerCodPos' => array('label' => 'Código Postal', 'maxlength' => '4'),
			'PerDomEmai' => array('label' => 'Email', 'maxlength' => '100', 'readonly' => TRUE, 'tabindex' => '-1'),
			'NroDocumen' => array('label' => 'N° Documento', 'maxlength' => '8', 'readonly' => TRUE),
		);
		$this->requeridos = array('PerCuil');
		$this->unicos = array('PerCuil');
	}

	function get_persona($persona_id) {
		$DB1 = $this->load->database('bono_secundario', TRUE);
		$DB1->select('persona.id, persona.PerCuil, persona.PerApe, persona.PerNom, persona.PerFecNac, persona.PerSex, persona.PerDomClle, persona.PerDomNro, persona.PerDomPiso, persona.PerDomDpto, persona.PerDomTel, persona.PerDomTel2, persona.PerDomProC, persona.PerDomDepl, persona.PerDomDisl, persona.PerCodPos, persona.PerDomEmai, persona.NroDocumen, persona.Estado, persona.fecha_registro, persona.usuario_id, persona.fecha_validacion, depto.DepDes as PerDomDepl, distrito.DisDes as PerDomDisl, CONCAT(escuela.numero, " - ", escuela.nombre) as escuela')
			->from('persona')
			->join('inscripcion', 'persona.id = inscripcion.persona_id')
			->join('escuela', 'escuela.id = inscripcion.escuela_id')
			->join('depto', 'depto.DepId = persona.PerDomDepl')
			->join('distrito', 'distrito.DepId = persona.PerDomDepl AND distrito.DisId = persona.PerDomDisl')
			->where('persona_id', $persona_id);
		$query = $DB1->get();

		return $query->row();
	}

	public function get_indices() {
		$DB1 = $this->load->database('bono_secundario', TRUE);
		$indices = array();
		$indices['Personas inscriptas del total de registradas'] = $DB1->select('COUNT(1) total, SUM(CASE WHEN inscripcion.fecha_cierre IS NULL THEN 0 ELSE 1 END) cantidad')
				->from('persona')
				->join('inscripcion', 'persona.id = inscripcion.persona_id')
				->get()->row();
		$indices['Personas inscriptas del total de registradas']->link = 'juntas/alertas/listar_inscriptos';
		$indices['Personas Auditadas'] = $DB1->select('SUM(CASE WHEN inscripcion.fecha_cierre IS NULL THEN 0 ELSE 1 END) total, SUM(CASE WHEN inscripcion.fecha_recepcion IS NULL THEN 0 ELSE 1 END) cantidad')
				->from('persona')
				->join('inscripcion', 'persona.id = inscripcion.persona_id')
				->get()->row();
		$indices['Personas Auditadas']->link = 'juntas/alertas/listar_auditadas';
		$indices['Vacantes disponibles'] = $DB1->select('SUM(escuela.vacantes) total, SUM(escuela.vacantes_disponibles) cantidad')
				->from('escuela')
				->get()->row();
		$indices['Vacantes disponibles']->link = 'juntas/alertas/listar_vacantes';
		return $indices;
	}

	/**
	 * _can_delete: Devuelve true si puede eliminarse el registro.
	 *
	 * @param int $delete_id
	 * @return bool
	 */
	protected function _can_delete($delete_id) {
		return TRUE;
	}
}
/* End of file Persona_model.php */
/* Location: ./application/modules/gem/bono_secundario/models/Persona_model.php */